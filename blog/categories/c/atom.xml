<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: C | 法華経]]></title>
  <link href="http://namusyaka.github.com/blog/categories/c/atom.xml" rel="self"/>
  <link href="http://namusyaka.github.com/"/>
  <updated>2013-02-04T21:37:57+09:00</updated>
  <id>http://namusyaka.github.com/</id>
  <author>
    <name><![CDATA[namusyaka]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[三年とちょっとぶりくらいにC言語書いた]]></title>
    <link href="http://namusyaka.github.com/blog/2011/03/01/github-jekyll/"/>
    <updated>2011-03-01T00:00:00+09:00</updated>
    <id>http://namusyaka.github.com/blog/2011/03/01/github-jekyll</id>
    <content type="html"><![CDATA[<p>このブログも一万PVですか。おめでとう俺。</p>

<h2>ﾅﾑ変換</h2>


<p>というツールがあることをご存知ですか。
大分前に僕が作った物ですが、日本語入力できないしあまり面白くないんですよね。
んで、Cを書きたいなーと最近思っていたのでCで似たようなプログラムを書きました。</p>

<script src="https://gist.github.com/869509.js"> </script>


<p><noscript>
{% codeblock lang:c %}</p>

<h1>include &lt;stdio.h></h1>

<h1>include &lt;string.h></h1>

<h1>include &lt;stdlib.h></h1>

<p>void encode(char <em>target, char </em>str) {</p>

<pre><code>    char *result = malloc(strlen(target) * 8 + 1);

    if(result) {

            int b, sum;

            for(sum = 0; *target; *target++)
                    for(b = 1; b &lt;= 128; b &lt;&lt;= 1)
                            result[sum++] = str[*target &amp; b ? 1 : 0];

            result[sum] = 0;
            printf("%s", result);
            free(result);
    }
</code></pre>

<p>}</p>

<p>void decode(char <em>target, char </em>str) {</p>

<pre><code>    int l = strlen(target);

    if(l &amp; 7)
            return;

    int sum = l &gt;&gt; 3;
    char *result = malloc(sum + 1);

    if(result) {

            int i, j, b;

            for(j = 0; j &lt; sum; j++){
                    for(i = 7, b = 0; i &gt;= 0; i--)
                            if(target[i] - str[0])
                                    b |= (1 &lt;&lt; i);

                    target += 8;
                    result[j] = b;
            }

            result[sum] = 0;
            printf("%s", result);
            free(result);

    }
</code></pre>

<p>}</p>

<p>int main(int argc, char *argv[]) {</p>

<pre><code>    int sum = 0;

    if(argc &gt; 3) {
            if(*argv[1] == '-' &amp;&amp; strlen(argv[3]) == 2) {
                    switch(argv[1][1]) {
                            case 'e':
                                    encode(argv[2], argv[3]);
                                    break;
                            case 'd':
                                    decode(argv[2], argv[3]);
                                    break;
                    }
            }
    }

    return 0;
</code></pre>

<p>}</p>

<p>{% endcodeblock %}</p>

<p></noscript>
コンパイルしてください。
そのうち配布するかもしれませんが。
引数には共にオプション(-e,-d)と変換する文字列と変換後(前)の文字列が必要です。
デコードする際は、エンコード時に渡した変換後の文字列を渡します。
また、変換後(前)の文字列は必ず半角且つ、二文字でなくてはいけません(ab,ﾅﾑ等)。
以下に例を示します。</p>

<p>{% codeblock lang:vim %}</p>

<p>C:>hoge.exe -e なむきもい ﾅﾑ
ﾅﾑﾅﾅﾅﾅﾅﾑﾅﾅﾅﾑﾅﾅﾑﾑﾅﾑﾅﾅﾅﾅﾅﾑﾅﾑﾑﾑﾑﾅﾑﾑﾅﾑﾅﾅﾅﾅﾅﾑﾑﾑﾅﾑﾅﾑﾅﾑﾅﾑﾅﾅﾅﾅﾅﾑﾅﾅﾅﾅﾅﾑﾑﾑﾅﾑﾅﾅﾅﾅﾅﾑﾅﾑﾅﾅﾅﾑﾅﾑ</p>

<p>C:>hoge.exe -d ﾅﾑﾅﾅﾅﾅﾅﾑﾅﾅﾅﾑﾅﾅﾑﾑﾅﾑﾅﾅﾅﾅﾅﾑﾅﾑﾑﾑﾑﾅﾑﾑﾅﾑﾅﾅﾅﾅﾅﾑﾑﾑﾅﾑﾅﾑﾅﾑﾅﾑﾅﾅﾅﾅﾅﾑﾅﾅﾅﾅﾅﾑﾑﾑﾅﾑﾅﾅﾅﾅﾅﾑﾅﾑﾅﾅﾅﾑﾅﾑ ﾅﾑ
なむきもい</p>

<p>{% endcodeblock %}</p>

<p>やっぱり文字列をいじってどーのこーのやるのはスクリプト言語が断然楽ですね。
非常にだるかったです。</p>
]]></content>
  </entry>
  
</feed>
