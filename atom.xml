<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[法華経]]></title>
  <link href="http://namusyaka.github.com/atom.xml" rel="self"/>
  <link href="http://namusyaka.github.com/"/>
  <updated>2013-08-11T01:47:25+09:00</updated>
  <id>http://namusyaka.github.com/</id>
  <author>
    <name><![CDATA[namusyaka]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[私は如何にしてPadrino::Routing及びhttp_routerのバグを直したか]]></title>
    <link href="http://namusyaka.github.com/blog/2013/08/10/github-jekyll/"/>
    <updated>2013-08-10T00:00:00+09:00</updated>
    <id>http://namusyaka.github.com/blog/2013/08/10/github-jekyll</id>
    <content type="html"><![CDATA[<p>タイトルは大げさですみません。</p>

<p>Padrino Contributorの先輩である<a href="http://twitter.com/tyabe">@tyabeさん</a>から<a href="http://tyabe.hatenablog.com/entry/2013/08/09/000000">解説の要請</a>をいただいたので、うろ覚えですが解説していきます。</p>

<p>ちなみに問題のissueは<a href="https://github.com/padrino/padrino-framework/issues/1366">broken parameter assignment in routing (11.2)</a>になります。</p>

<h2>まずは挙動確認</h2>

<p>nesquenaさんやsshawさんがこれもおかしいよ情報を書き込んでいてくれたので、そのテストコードを参考におかしくなる挙動を見つけていきます。</p>

<p>その結果、以下のことがわかります。</p>

<ul>
<li>:withオプションに限らず、正規表現を使ったキャプチャを使った場合の挙動がおかしい。</li>
<li>レスポンスのステータスコードが405になっている(許可されていないメソッド)。</li>
</ul>


<p>この二つを軸にして、実際のコードを読んでいきます。</p>

<h2>padrino-core/application/routing.rb</h2>

<p>基本的にPadrinoでは、<a href="https://github.com/padrino/padrino-framework/blob/master/padrino-core/lib/padrino-core/application/routing.rb#L643-L725">routeメソッド</a>でrouteを追加したりオプションやキャプチャをごにょごにょしているので、まずはそこを見ていきます。</p>

<p>この辺はプリントデバッグをした記憶がありますがあまり覚えてないです、すみません。</p>

<p>キャプチャ用のオプションなどはrouteメソッド内の以下の部分が肝のようでした。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>          <span class="n">options</span><span class="o">.</span><span class="n">delete_if</span> <span class="k">do</span> <span class="o">|</span><span class="n">option</span><span class="p">,</span> <span class="n">args</span><span class="o">|</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">route</span><span class="o">.</span><span class="n">significant_variable_names</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="n">option</span><span class="p">)</span>
</span><span class='line'>              <span class="n">route</span><span class="o">.</span><span class="n">add_match_with</span><span class="p">(</span><span class="n">option</span> <span class="o">=&gt;</span> <span class="nb">Array</span><span class="p">(</span><span class="n">args</span><span class="p">)</span><span class="o">.</span><span class="n">first</span><span class="p">)</span>
</span><span class='line'>              <span class="kp">true</span>
</span><span class='line'>            <span class="k">end</span>
</span><span class='line'>          <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>ここでrouteに対してadd_match_withでオプションを渡しているようです。</p>

<p>routeはHttp::Routeのインスタンスなので、routing.rbはこのくらいにして次に進みます。</p>

<h2>そしてhttp_routerへ…</h2>

<p>まずはroute.add_match_withの動作を追います。</p>

<p><a href="https://github.com/joshbuddy/http_router/blob/master/lib/http_router.rb">http_router.rb</a>を探してもadd_match_withなんでメソッドはないので得意のヘルパーだろうなと思い、<a href="https://github.com/joshbuddy/http_router/blob/master/lib/http_router/route_helper.rb">route_helper.rb</a>を探すと案の定ありました。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>    <span class="k">def</span> <span class="nf">add_match_with</span><span class="p">(</span><span class="n">matchers</span><span class="p">)</span>
</span><span class='line'>      <span class="vi">@match_with</span> <span class="o">||=</span> <span class="p">{}</span>
</span><span class='line'>      <span class="vi">@match_with</span><span class="o">.</span><span class="n">merge!</span><span class="p">(</span><span class="n">matchers</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>このコード自体には何の問題も無く、やっぱりマッチングがおかしいんだよね〜ということで、match_withをコード内から探していくとmatches_withというメソッドがroute.rbで見つかります。</p>

<p>今度はmatches_withを検索すると明らかにそれっぽくて読み難いコードが<a href="https://github.com/joshbuddy/http_router/blob/master/lib/http_router/node/root.rb">root.rb</a>で見つかります(add_route, add_normal_partの辺りです)。</p>

<p>ここからはしばらく、渡されたキャプチャがどういう順序を辿って行くのか調べていました(プリントデバッグなので省略します)。</p>

<p>結果、node.add_spanning_match(route.matches_with(name))に渡っていることがわかります。</p>

<p>add_spanning_matchは<code>/lib/http_router/node.rb</code>にあるようで、以下のコードになります。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>    <span class="k">def</span> <span class="nf">add_spanning_match</span><span class="p">(</span><span class="n">regexp</span><span class="p">,</span> <span class="n">matching_indicies</span> <span class="o">=</span> <span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="p">,</span> <span class="n">splitting_indicies</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>      <span class="n">add</span><span class="p">(</span><span class="no">SpanningRegex</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="vi">@router</span><span class="p">,</span> <span class="nb">self</span><span class="p">,</span> <span class="n">regexp</span><span class="p">,</span> <span class="n">matching_indicies</span><span class="p">,</span> <span class="n">splitting_indicies</span><span class="p">))</span>
</span><span class='line'>    <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>ついに黒幕が正体を現しました。SpanningRegex、こいつです。</p>

<h3>lib/http_router/node/spanning_regex.rbへ</h3>

<p>ここまで辿り着けば簡単な気もしますが(params_countのコードが明らかにおかしいので)、おかしい部分には全く気づかずにちらっと見て諦めました。</p>

<p>あまりに意味不明なので、http_routerが内部で生成してくれたありがたいソースコードをprintしてどのように遷移していくのか見て行くことにしました。</p>

<p>以下のようなコードをpadrino-core/application/routing.rbに書きます(実はデバッグ時のコードは消しちゃって残ってないので再現になります…)。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">class</span> <span class="nc">Node</span><span class="o">::</span><span class="no">Root</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">compile</span><span class="p">(</span><span class="n">routes</span><span class="p">)</span>
</span><span class='line'>      <span class="n">routes</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span><span class="o">|</span><span class="n">route</span><span class="o">|</span> <span class="n">add_route</span><span class="p">(</span><span class="n">route</span><span class="p">)}</span>
</span><span class='line'>      <span class="n">root</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="n">root</span><span class="o">.</span><span class="n">methods_module</span><span class="p">)</span>
</span><span class='line'>      <span class="n">_code</span> <span class="o">=</span> <span class="n">to_code</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="n">_code</span>
</span><span class='line'>      <span class="nb">instance_eval</span> <span class="s2">&quot;def call(request, &amp;callback)</span><span class="se">\n</span><span class="si">#{</span><span class="n">_code</span><span class="si">}</span><span class="se">\n</span><span class="s2">nil</span><span class="se">\n</span><span class="s2">end&quot;</span>
</span><span class='line'>      <span class="vi">@compiled</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>余談ですが、http_routerではrouteを追加するごとに、<code>to_code</code>で生成されるコードが増えていきます。地獄です。</p>

<h3>to_codeで生成されるコードを読む</h3>

<p>適当に作ったpadrino-appのapp/app.rbを以下のようにして、padrino sでデバッグ開始です(mock_appとか使ってテストした方が早かったと今になって思う)。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Sandbox</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">App</span> <span class="o">&lt;</span> <span class="no">Padrino</span><span class="o">::</span><span class="no">Application</span>
</span><span class='line'>    <span class="n">register</span> <span class="no">Padrino</span><span class="o">::</span><span class="no">Rendering</span>
</span><span class='line'>    <span class="n">register</span> <span class="no">Padrino</span><span class="o">::</span><span class="no">Helpers</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">post</span> <span class="ss">:index</span><span class="p">,</span> <span class="ss">:with</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="ss">:foo</span><span class="p">,</span> <span class="ss">:bar</span><span class="o">]</span><span class="p">,</span> <span class="ss">:bar</span> <span class="o">=&gt;</span> <span class="sr">/.+/</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">params</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">get</span> <span class="ss">:index</span><span class="p">,</span> <span class="ss">:map</span> <span class="o">=&gt;</span> <span class="s1">&#39;/mystuff/:a_id/boing/:boing_id&#39;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">params</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>適当に<code>/</code>などにアクセスすると以下のような出力が得られます(実際の出力は見難かったので少し整形しています)。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># HttpRouter::Node::Variable</span>
</span><span class='line'><span class="k">unless</span> <span class="n">request</span><span class="o">.</span><span class="n">path_finished?</span>
</span><span class='line'>  <span class="n">request</span><span class="o">.</span><span class="n">params</span> <span class="o">&lt;&lt;</span> <span class="n">request</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">shift</span>
</span><span class='line'>  <span class="c1"># HttpRouter::Node::SpanningRegex</span>
</span><span class='line'>  <span class="n">whole_path1</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">joined_path</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">match</span> <span class="o">=</span> <span class="sr">/.+/</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="n">whole_path1</span><span class="p">)</span> <span class="ow">and</span> <span class="n">match</span><span class="o">.</span><span class="n">begin</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">.</span><span class="n">zero?</span>
</span><span class='line'>    <span class="n">_whole_path1</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">dup</span>
</span><span class='line'>    <span class="n">request</span><span class="o">.</span><span class="n">params</span> <span class="o">&lt;&lt;</span> <span class="n">match</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">remaining_path</span> <span class="o">=</span> <span class="n">whole_path1</span><span class="o">[</span><span class="n">match</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">size</span> <span class="o">+</span> <span class="p">(</span><span class="n">whole_path1</span><span class="o">[</span><span class="n">match</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">size</span><span class="o">]</span> <span class="o">==</span> <span class="sc">?/</span> <span class="p">?</span> <span class="mi">1</span> <span class="p">:</span> <span class="mi">0</span><span class="p">),</span> <span class="n">whole_path1</span><span class="o">.</span><span class="n">size</span><span class="o">]</span>
</span><span class='line'>    <span class="n">request</span><span class="o">.</span><span class="n">path</span> <span class="o">=</span> <span class="n">remaining_path</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># HttpRouter::Node::RequestMethod</span>
</span><span class='line'>    <span class="k">if</span> <span class="s2">&quot;POST&quot;</span> <span class="o">===</span> <span class="n">request</span><span class="o">.</span><span class="n">rack_request</span><span class="o">.</span><span class="n">request_method</span>
</span><span class='line'>      <span class="k">if</span> <span class="s2">&quot;POST&quot;</span> <span class="o">===</span> <span class="n">request</span><span class="o">.</span><span class="n">rack_request</span><span class="o">.</span><span class="n">request_method</span>
</span><span class='line'>        <span class="c1"># HttpRouter::Node::Path</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">request</span><span class="o">.</span><span class="n">path_finished?</span>
</span><span class='line'>          <span class="kp">catch</span><span class="p">(</span><span class="ss">:pass</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">callback</span>
</span><span class='line'>              <span class="n">request</span><span class="o">.</span><span class="n">called</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>              <span class="n">callback</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="no">Response</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="vi">@ivar_2</span><span class="p">))</span>
</span><span class='line'>            <span class="k">else</span>
</span><span class='line'>              <span class="n">env</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">rack_request</span><span class="o">.</span><span class="n">dup</span><span class="o">.</span><span class="n">env</span>
</span><span class='line'>              <span class="n">env</span><span class="o">[</span><span class="s1">&#39;router.request&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="n">request</span>
</span><span class='line'>              <span class="n">env</span><span class="o">[</span><span class="s1">&#39;router.params&#39;</span><span class="o">]</span> <span class="o">||=</span> <span class="p">{}</span>
</span><span class='line'>              <span class="n">env</span><span class="o">[</span><span class="s1">&#39;router.params&#39;</span><span class="o">].</span><span class="n">merge!</span><span class="p">(</span><span class="no">Hash</span><span class="o">[[</span><span class="ss">:foo</span><span class="p">,</span> <span class="ss">:bar</span><span class="o">].</span><span class="n">zip</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">params</span><span class="p">)</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>              <span class="vi">@router</span><span class="o">.</span><span class="n">rewrite_path_info</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">request</span><span class="p">)</span>
</span><span class='line'>              <span class="n">response</span> <span class="o">=</span> <span class="vi">@router</span><span class="o">.</span><span class="n">process_destination_path</span><span class="p">(</span><span class="vi">@ivar_2</span><span class="p">,</span> <span class="n">env</span><span class="p">)</span>
</span><span class='line'>              <span class="k">return</span> <span class="n">response</span> <span class="k">unless</span> <span class="n">router</span><span class="o">.</span><span class="n">pass_on_response</span><span class="p">(</span><span class="n">response</span><span class="p">)</span>
</span><span class='line'>            <span class="k">end</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">request</span><span class="o">.</span><span class="n">acceptable_methods</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="o">[</span><span class="s2">&quot;POST&quot;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">request</span><span class="o">.</span><span class="n">path</span> <span class="o">=</span> <span class="n">_whole_path1</span>
</span><span class='line'>    <span class="n">request</span><span class="o">.</span><span class="n">params</span><span class="o">.</span><span class="n">slice!</span><span class="p">(</span><span class="o">-</span><span class="mi">8</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">request</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">unshift</span> <span class="n">request</span><span class="o">.</span><span class="n">params</span><span class="o">.</span><span class="n">pop</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># HttpRouter::Node::Lookup</span>
</span><span class='line'><span class="k">unless</span> <span class="n">request</span><span class="o">.</span><span class="n">path_finished?</span>
</span><span class='line'>  <span class="n">part3</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">shift</span>
</span><span class='line'>  <span class="k">case</span> <span class="n">part3</span>
</span><span class='line'>  <span class="k">when</span> <span class="s2">&quot;mystuff&quot;</span>
</span><span class='line'>    <span class="k">unless</span> <span class="n">request</span><span class="o">.</span><span class="n">path_finished?</span>
</span><span class='line'>      <span class="n">request</span><span class="o">.</span><span class="n">params</span> <span class="o">&lt;&lt;</span> <span class="n">request</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">shift</span>
</span><span class='line'>      <span class="c1"># HttpRouter::Node::Lookup</span>
</span><span class='line'>      <span class="k">unless</span> <span class="n">request</span><span class="o">.</span><span class="n">path_finished?</span>
</span><span class='line'>        <span class="n">part4</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">shift</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">part4</span>
</span><span class='line'>        <span class="k">when</span> <span class="s2">&quot;boing&quot;</span>
</span><span class='line'>          <span class="k">unless</span> <span class="n">request</span><span class="o">.</span><span class="n">path_finished?</span>
</span><span class='line'>            <span class="n">request</span><span class="o">.</span><span class="n">params</span> <span class="o">&lt;&lt;</span> <span class="n">request</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">shift</span>
</span><span class='line'>            <span class="c1"># HttpRouter::Node::RequestMethod</span>
</span><span class='line'>            <span class="k">if</span> <span class="s2">&quot;GET&quot;</span> <span class="o">===</span> <span class="n">request</span><span class="o">.</span><span class="n">rack_request</span><span class="o">.</span><span class="n">request_method</span>
</span><span class='line'>              <span class="k">if</span> <span class="s2">&quot;GET&quot;</span> <span class="o">===</span> <span class="n">request</span><span class="o">.</span><span class="n">rack_request</span><span class="o">.</span><span class="n">request_method</span>
</span><span class='line'>              <span class="c1"># HttpRouter::Node::Path</span>
</span><span class='line'>                <span class="k">if</span> <span class="n">request</span><span class="o">.</span><span class="n">path_finished?</span>
</span><span class='line'>                  <span class="kp">catch</span><span class="p">(</span><span class="ss">:pass</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>                    <span class="k">if</span> <span class="n">callback</span>
</span><span class='line'>                      <span class="n">request</span><span class="o">.</span><span class="n">called</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>                      <span class="n">callback</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="no">Response</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="vi">@ivar_5</span><span class="p">))</span>
</span><span class='line'>                    <span class="k">else</span>
</span><span class='line'>                      <span class="n">env</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">rack_request</span><span class="o">.</span><span class="n">dup</span><span class="o">.</span><span class="n">env</span>
</span><span class='line'>                      <span class="n">env</span><span class="o">[</span><span class="s1">&#39;router.request&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="n">request</span>
</span><span class='line'>                      <span class="n">env</span><span class="o">[</span><span class="s1">&#39;router.params&#39;</span><span class="o">]</span> <span class="o">||=</span> <span class="p">{}</span>
</span><span class='line'>                      <span class="n">env</span><span class="o">[</span><span class="s1">&#39;router.params&#39;</span><span class="o">].</span><span class="n">merge!</span><span class="p">(</span><span class="no">Hash</span><span class="o">[[</span><span class="ss">:a_id</span><span class="p">,</span> <span class="ss">:boing_id</span><span class="o">].</span><span class="n">zip</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">params</span><span class="p">)</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>                      <span class="vi">@router</span><span class="o">.</span><span class="n">rewrite_path_info</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">request</span><span class="p">)</span>
</span><span class='line'>                      <span class="n">response</span> <span class="o">=</span> <span class="vi">@router</span><span class="o">.</span><span class="n">process_destination_path</span><span class="p">(</span><span class="vi">@ivar_5</span><span class="p">,</span> <span class="n">env</span><span class="p">)</span>
</span><span class='line'>                      <span class="k">return</span> <span class="n">response</span> <span class="k">unless</span> <span class="n">router</span><span class="o">.</span><span class="n">pass_on_response</span><span class="p">(</span><span class="n">response</span><span class="p">)</span>
</span><span class='line'>                    <span class="k">end</span>
</span><span class='line'>                  <span class="k">end</span>
</span><span class='line'>                <span class="k">end</span>
</span><span class='line'>              <span class="k">end</span>
</span><span class='line'>            <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">request</span><span class="o">.</span><span class="n">acceptable_methods</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="o">[</span><span class="s2">&quot;GET&quot;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1"># HttpRouter::Node::RequestMethod</span>
</span><span class='line'>            <span class="k">if</span> <span class="s2">&quot;HEAD&quot;</span> <span class="o">===</span> <span class="n">request</span><span class="o">.</span><span class="n">rack_request</span><span class="o">.</span><span class="n">request_method</span>
</span><span class='line'>              <span class="k">if</span> <span class="s2">&quot;HEAD&quot;</span> <span class="o">===</span> <span class="n">request</span><span class="o">.</span><span class="n">rack_request</span><span class="o">.</span><span class="n">request_method</span>
</span><span class='line'>              <span class="c1"># HttpRouter::Node::Path</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">if</span> <span class="n">request</span><span class="o">.</span><span class="n">path_finished?</span>
</span><span class='line'>                  <span class="kp">catch</span><span class="p">(</span><span class="ss">:pass</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>                    <span class="k">if</span> <span class="n">callback</span>
</span><span class='line'>                      <span class="n">request</span><span class="o">.</span><span class="n">called</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>                      <span class="n">callback</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="no">Response</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="vi">@ivar_6</span><span class="p">))</span>
</span><span class='line'>                    <span class="k">else</span>
</span><span class='line'>                      <span class="n">env</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">rack_request</span><span class="o">.</span><span class="n">dup</span><span class="o">.</span><span class="n">env</span>
</span><span class='line'>                      <span class="n">env</span><span class="o">[</span><span class="s1">&#39;router.request&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="n">request</span>
</span><span class='line'>                      <span class="n">env</span><span class="o">[</span><span class="s1">&#39;router.params&#39;</span><span class="o">]</span> <span class="o">||=</span> <span class="p">{}</span>
</span><span class='line'>                      <span class="n">env</span><span class="o">[</span><span class="s1">&#39;router.params&#39;</span><span class="o">].</span><span class="n">merge!</span><span class="p">(</span><span class="no">Hash</span><span class="o">[[</span><span class="ss">:a_id</span><span class="p">,</span> <span class="ss">:boing_id</span><span class="o">].</span><span class="n">zip</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">params</span><span class="p">)</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>                      <span class="vi">@router</span><span class="o">.</span><span class="n">rewrite_path_info</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">request</span><span class="p">)</span>
</span><span class='line'>                      <span class="n">response</span> <span class="o">=</span> <span class="vi">@router</span><span class="o">.</span><span class="n">process_destination_path</span><span class="p">(</span><span class="vi">@ivar_6</span><span class="p">,</span> <span class="n">env</span><span class="p">)</span>
</span><span class='line'>                      <span class="k">return</span> <span class="n">response</span> <span class="k">unless</span> <span class="n">router</span><span class="o">.</span><span class="n">pass_on_response</span><span class="p">(</span><span class="n">response</span><span class="p">)</span>
</span><span class='line'>                    <span class="k">end</span>
</span><span class='line'>                  <span class="k">end</span>
</span><span class='line'>                <span class="k">end</span>
</span><span class='line'>              <span class="k">end</span>
</span><span class='line'>            <span class="k">end</span>
</span><span class='line'>            <span class="n">request</span><span class="o">.</span><span class="n">acceptable_methods</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="o">[</span><span class="s2">&quot;HEAD&quot;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">request</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">unshift</span> <span class="n">request</span><span class="o">.</span><span class="n">params</span><span class="o">.</span><span class="n">pop</span>
</span><span class='line'>          <span class="k">end</span><span class="p">;</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>        <span class="n">request</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">unshift</span> <span class="n">part4</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">request</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">unshift</span> <span class="n">request</span><span class="o">.</span><span class="n">params</span><span class="o">.</span><span class="n">pop</span>
</span><span class='line'>    <span class="k">end</span><span class="p">;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">request</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">unshift</span> <span class="n">part3</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># HttpRouter::Node::Glob</span>
</span><span class='line'><span class="n">request</span><span class="o">.</span><span class="n">params</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">globbed_params7</span> <span class="o">=</span> <span class="o">[]</span><span class="p">)</span>
</span><span class='line'><span class="k">until</span> <span class="n">request</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">empty?</span>
</span><span class='line'>  <span class="n">globbed_params7</span> <span class="o">&lt;&lt;</span> <span class="n">request</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">shift</span>
</span><span class='line'>  <span class="c1"># HttpRouter::Node::Regex</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">match</span> <span class="o">=</span> <span class="sr">/([^\/]*?)\.png$/</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">first</span><span class="p">)</span> <span class="ow">and</span> <span class="n">match</span><span class="o">.</span><span class="n">begin</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">.</span><span class="n">zero?</span>
</span><span class='line'>    <span class="n">part</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">shift</span>
</span><span class='line'>    <span class="n">request</span><span class="o">.</span><span class="n">params</span> <span class="o">&lt;&lt;</span> <span class="n">match</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>    <span class="c1"># HttpRouter::Node::RequestMethod</span>
</span><span class='line'>    <span class="k">if</span> <span class="s2">&quot;GET&quot;</span> <span class="o">===</span> <span class="n">request</span><span class="o">.</span><span class="n">rack_request</span><span class="o">.</span><span class="n">request_method</span>
</span><span class='line'>      <span class="k">if</span> <span class="s2">&quot;GET&quot;</span> <span class="o">===</span> <span class="n">request</span><span class="o">.</span><span class="n">rack_request</span><span class="o">.</span><span class="n">request_method</span>
</span><span class='line'>        <span class="c1"># HttpRouter::Node::Path</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">request</span><span class="o">.</span><span class="n">path_finished?</span>
</span><span class='line'>          <span class="kp">catch</span><span class="p">(</span><span class="ss">:pass</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">callback</span>
</span><span class='line'>              <span class="n">request</span><span class="o">.</span><span class="n">called</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>              <span class="n">callback</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="no">Response</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="vi">@ivar_8</span><span class="p">))</span>
</span><span class='line'>            <span class="k">else</span>
</span><span class='line'>              <span class="n">env</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">rack_request</span><span class="o">.</span><span class="n">dup</span><span class="o">.</span><span class="n">env</span>
</span><span class='line'>              <span class="n">env</span><span class="o">[</span><span class="s1">&#39;router.request&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="n">request</span>
</span><span class='line'>              <span class="n">env</span><span class="o">[</span><span class="s1">&#39;router.params&#39;</span><span class="o">]</span> <span class="o">||=</span> <span class="p">{}</span>
</span><span class='line'>              <span class="n">env</span><span class="o">[</span><span class="s1">&#39;router.params&#39;</span><span class="o">].</span><span class="n">merge!</span><span class="p">(</span><span class="no">Hash</span><span class="o">[[</span><span class="ss">:__sinatra__</span><span class="p">,</span> <span class="ss">:image</span><span class="o">].</span><span class="n">zip</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">params</span><span class="p">)</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>              <span class="vi">@router</span><span class="o">.</span><span class="n">rewrite_path_info</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">request</span><span class="p">)</span>
</span><span class='line'>              <span class="n">response</span> <span class="o">=</span> <span class="vi">@router</span><span class="o">.</span><span class="n">process_destination_path</span><span class="p">(</span><span class="vi">@ivar_8</span><span class="p">,</span> <span class="n">env</span><span class="p">)</span>
</span><span class='line'>              <span class="k">return</span> <span class="n">response</span> <span class="k">unless</span> <span class="n">router</span><span class="o">.</span><span class="n">pass_on_response</span><span class="p">(</span><span class="n">response</span><span class="p">)</span>
</span><span class='line'>            <span class="k">end</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">request</span><span class="o">.</span><span class="n">acceptable_methods</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="o">[</span><span class="s2">&quot;GET&quot;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># HttpRouter::Node::RequestMethod</span>
</span><span class='line'>    <span class="k">if</span> <span class="s2">&quot;HEAD&quot;</span> <span class="o">===</span> <span class="n">request</span><span class="o">.</span><span class="n">rack_request</span><span class="o">.</span><span class="n">request_method</span>
</span><span class='line'>      <span class="k">if</span> <span class="s2">&quot;HEAD&quot;</span> <span class="o">===</span> <span class="n">request</span><span class="o">.</span><span class="n">rack_request</span><span class="o">.</span><span class="n">request_method</span>
</span><span class='line'>        <span class="c1"># HttpRouter::Node::Path</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="n">request</span><span class="o">.</span><span class="n">path_finished?</span>
</span><span class='line'>          <span class="kp">catch</span><span class="p">(</span><span class="ss">:pass</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">callback</span>
</span><span class='line'>              <span class="n">request</span><span class="o">.</span><span class="n">called</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>              <span class="n">callback</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="no">Response</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="vi">@ivar_9</span><span class="p">))</span>
</span><span class='line'>            <span class="k">else</span>
</span><span class='line'>              <span class="n">env</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">rack_request</span><span class="o">.</span><span class="n">dup</span><span class="o">.</span><span class="n">env</span>
</span><span class='line'>              <span class="n">env</span><span class="o">[</span><span class="s1">&#39;router.request&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="n">request</span>
</span><span class='line'>              <span class="n">env</span><span class="o">[</span><span class="s1">&#39;router.params&#39;</span><span class="o">]</span> <span class="o">||=</span> <span class="p">{}</span>
</span><span class='line'>              <span class="n">env</span><span class="o">[</span><span class="s1">&#39;router.params&#39;</span><span class="o">].</span><span class="n">merge!</span><span class="p">(</span><span class="no">Hash</span><span class="o">[[</span><span class="ss">:__sinatra__</span><span class="p">,</span> <span class="ss">:image</span><span class="o">].</span><span class="n">zip</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">params</span><span class="p">)</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>              <span class="vi">@router</span><span class="o">.</span><span class="n">rewrite_path_info</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">request</span><span class="p">)</span>
</span><span class='line'>              <span class="n">response</span> <span class="o">=</span> <span class="vi">@router</span><span class="o">.</span><span class="n">process_destination_path</span><span class="p">(</span><span class="vi">@ivar_9</span><span class="p">,</span> <span class="n">env</span><span class="p">)</span>
</span><span class='line'>              <span class="k">return</span> <span class="n">response</span> <span class="k">unless</span> <span class="n">router</span><span class="o">.</span><span class="n">pass_on_response</span><span class="p">(</span><span class="n">response</span><span class="p">)</span>
</span><span class='line'>            <span class="k">end</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">request</span><span class="o">.</span><span class="n">acceptable_methods</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="o">[</span><span class="s2">&quot;HEAD&quot;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">request</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">unshift</span> <span class="n">part</span>
</span><span class='line'>    <span class="n">request</span><span class="o">.</span><span class="n">params</span><span class="o">.</span><span class="n">pop</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">request</span><span class="o">.</span><span class="n">path</span><span class="o">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="n">globbed_params7</span>
</span></code></pre></td></tr></table></div></figure>


<p>凄まじいですね！</p>

<p>これをcallメソッドとしてinstance_evalで定義して、リクエスト毎に毎回このコードが実行されているんだからかなりヤバいです。</p>

<p>このコードを読む前提として、以下のものを挙げておきます。</p>

<ul>
<li>requestはHttpRouter::Request。Rack::Requestをごにょごにょするクラスです。</li>
<li>request.pathは原則的に、パスを<code>/</code>でsplitした配列を返します。</li>
<li>request.joined_pathはrequest.pathを<code>/</code>でjoinした結果である文字列を返します。</li>
<li>request.paramsは後に、ブロック内で参照できるparamsの元となるものです。詳しくは上のコードとあわせて<code>padrino-core/application/routing.rb</code>にあるprocess_destination_pathメソッド付近を読むとわかります。</li>
<li>request.rack_request.request_methodは動作に問題なく、<code>/mystuff/5/boing/2</code>にGETでリクエストを飛ばすとGETが格納されています。</li>
<li>生成されるコードでは、条件に入る前にrequest.paramsを追加し、条件に当てはまらなかった場合にはrequest.pathやrequest.paramsの値を操作して、帳尻を合わせるということをしています。</li>
<li>どう考えてもおかしい<code>match = /.+/.match(whole_path1)</code>がありますが、今回の問題の本質ではないので飛ばします(新たなバグの原因なのでそのうち時間があれば直そうと思っています)。</li>
</ul>


<p>今回問題なのは、<code>/mystuff/5/boing/2</code>にリクエストを飛ばしたときに405を返すというところで、本来であれば46行目の<code>case part3</code>から始まる部分にマッチすべきリクエストのはずです。</p>

<p>part3の中身がおかしいことは明らかなので、以下のモンキーパッチをrouting.rbに書いて、中身を調べます。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">class</span> <span class="nc">Node</span><span class="o">::</span><span class="no">Lookup</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">to_code</span>
</span><span class='line'>      <span class="n">part_name</span> <span class="o">=</span> <span class="s2">&quot;part</span><span class="si">#{</span><span class="n">root</span><span class="o">.</span><span class="n">next_counter</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="s2">&quot;unless request.path_finished?</span>
</span><span class='line'><span class="s2">        </span><span class="si">#{</span><span class="n">part_name</span><span class="si">}</span><span class="s2"> = request.path.shift</span>
</span><span class='line'><span class="s2">        p &#39;</span><span class="si">#{</span><span class="n">part_name</span><span class="si">}</span><span class="s2"> is &#39; + </span><span class="si">#{</span><span class="n">part_name</span><span class="si">}</span><span class="s2"> # この部分を追加</span>
</span><span class='line'><span class="s2">        case </span><span class="si">#{</span><span class="n">part_name</span><span class="si">}</span><span class="s2"></span>
</span><span class='line'><span class="s2">        </span><span class="si">#{</span><span class="vi">@map</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">k</span><span class="p">,</span> <span class="n">v</span><span class="o">|</span> <span class="s2">&quot;when </span><span class="si">#{</span><span class="n">k</span><span class="o">.</span><span class="n">inspect</span><span class="si">}</span><span class="s2">; </span><span class="si">#{</span><span class="n">v</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:to_code</span><span class="p">)</span> <span class="o">*</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="si">}</span><span class="s2">;&quot;</span><span class="si">}</span><span class="s2"> * &quot;</span><span class="p">\</span><span class="n">n</span><span class="s2">&quot;}</span>
</span><span class='line'><span class="s2">        end</span>
</span><span class='line'><span class="s2">        request.path.unshift </span><span class="si">#{</span><span class="n">part_name</span><span class="si">}</span><span class="s2"></span>
</span><span class='line'><span class="s2">      end&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>すると中身が判明し、<code>"part3 is 5/boing/2"</code>と出ます(本当は中身がおかしいにしても5が出力されるべきなんですが、前述したどう考えてもおかしい部分のせいでこうなっています)。</p>

<p>ここまで来ると、前提として挙げた帳尻合わせが上手くいっていないことがわかるので、その部分を重点的に見ていきます。</p>

<p>もう気づいている人も多いかと思いますが、生成されたコードの37行目に<code>request.params.slice!(-8, 1)</code>とあります。</p>

<p>ここで本来削除されるべきparamを削除できていないんだろうと思い、実際にこの部分を生成しているSpanningRegexを再度調べます。</p>

<p>以下のコードです。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">HttpRouter</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Node</span>
</span><span class='line'>    <span class="k">class</span> <span class="nc">SpanningRegex</span> <span class="o">&lt;</span> <span class="no">Regex</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">to_code</span>
</span><span class='line'>        <span class="n">params_count</span> <span class="o">=</span> <span class="vi">@ordered_indicies</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'>        <span class="n">whole_path_var</span> <span class="o">=</span> <span class="s2">&quot;whole_path</span><span class="si">#{</span><span class="n">root</span><span class="o">.</span><span class="n">next_counter</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>        <span class="s2">&quot;</span><span class="si">#{</span><span class="n">whole_path_var</span><span class="si">}</span><span class="s2"> = request.joined_path</span>
</span><span class='line'><span class="s2">        if match = </span><span class="si">#{</span><span class="vi">@matcher</span><span class="o">.</span><span class="n">inspect</span><span class="si">}</span><span class="s2">.match(</span><span class="si">#{</span><span class="n">whole_path_var</span><span class="si">}</span><span class="s2">) and match.begin(0).zero?</span>
</span><span class='line'><span class="s2">          _</span><span class="si">#{</span><span class="n">whole_path_var</span><span class="si">}</span><span class="s2"> = request.path.dup</span>
</span><span class='line'><span class="s2">          &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">param_capturing_code</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;</span>
</span><span class='line'><span class="s2">          remaining_path = </span><span class="si">#{</span><span class="n">whole_path_var</span><span class="si">}</span><span class="s2">[match[0].size + (</span><span class="si">#{</span><span class="n">whole_path_var</span><span class="si">}</span><span class="s2">[match[0].size] == ?/ ? 1 : 0), </span><span class="si">#{</span><span class="n">whole_path_var</span><span class="si">}</span><span class="s2">.size]</span>
</span><span class='line'><span class="s2">          request.path = remaining_path.split(&#39;/&#39;)</span>
</span><span class='line'><span class="s2">          </span><span class="si">#{</span><span class="n">node_to_code</span><span class="si">}</span><span class="s2"></span>
</span><span class='line'><span class="s2">          request.path = _</span><span class="si">#{</span><span class="n">whole_path_var</span><span class="si">}</span><span class="s2"></span>
</span><span class='line'><span class="s2">          request.params.slice!(</span><span class="si">#{</span><span class="o">-</span><span class="n">params_count</span><span class="o">.</span><span class="n">size</span><span class="si">}</span><span class="s2">, </span><span class="si">#{</span><span class="n">params_count</span><span class="si">}</span><span class="s2">)</span>
</span><span class='line'><span class="s2">       end</span>
</span><span class='line'><span class="s2">       &quot;</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>params_count.size</code>は明らかにおかしい(Fixnum#sizeをこの場面で使うことはないだろうと思った)ので、.size部分を消したものをモンキーパッチとして、routing.rbに追加してやるとしっかり帳尻が合い、</p>

<p>issueで取り上げられていたテストも無事動きました。</p>

<p>後は、今回の変更で以前まで動いていたコードが動かなくなっていないかをテストして、<a href="https://github.com/padrino/padrino-framework/pull/1378">pull req</a>を飛ばしました。</p>

<p>以上が、今回の大まかな顛末となります。</p>

<p>実際にはこれに辿り着いた後も、明らかにおかしい部分(前述)もまとめて上手く直す方法ないかな〜と模索していましたが途中で嫌になったのでやめてしまいました。</p>

<h2>総括</h2>

<ul>
<li>priorityを直したときにhttp_routerのコードをある程度読んでいたのでそれが良かったと思います。</li>
<li>priorityを直したときと違って、明らかに今回は開発者の人が動かそうとしているのがわかったので、少ない変更で解決できて安心しています。</li>
<li>コード生成部分、ヤバいと思うと同時にすごいなーとも思いました。かなり勉強になりました。</li>
<li>そもそも、SpanningRegexに辿り着いた時点で気づくべきミス(少なくとも違和感を感じるべき)だったのでまだまだ実力が足りないなと実感しました。</li>
</ul>


<p>最後になりますが、Padrinoは現在http_routerに依存していますが、今後のアップデートで(多分1.0かな？)http_routerを削除して、新たにroutingを書き換える予定になっています。</p>

<p>http_routerは確かにアレですが、Padrinoのことは嫌いにならずに使っていきましょう！</p>

<p>自分も少しでもPadrinoに協力できるようにがんばります！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2ch SSのまとめのまとめ?アンテナ?を作った]]></title>
    <link href="http://namusyaka.github.com/blog/2013/01/29/github-jekyll/"/>
    <updated>2013-01-29T00:00:00+09:00</updated>
    <id>http://namusyaka.github.com/blog/2013/01/29/github-jekyll</id>
    <content type="html"><![CDATA[<p>2ch SS、意外と暇つぶしになって素晴らしいがブログ毎に読むのは面倒だし、何より興味のないSSは全く読みたく無い。</p>

<p>既存のアンテナにカテゴライズもしてくれるモノがあったりするんだけど、スマホ対応されてなかったり、カテゴライズ自体が微妙だったりっていう理由でなかなか自分好みのものがなかった。</p>

<h2>だから作った</h2>

<p>「<a href="http://ss.namusyaka.info/" target="_blank">SSのまとめ(- -;*) | 2ch SSのまとめのまとめ</a>」</p>

<h2>つくってみた感想</h2>

<p>2chアンテナは乱立するのに対してSSまとめアンテナがなかなか出来ない理由がわかった。</p>

<p>カテゴライズがなかなかに面倒だ。</p>

<p>ブログごとに設定されたカテゴリを参考にカテゴライズしようかとも思ったけど、カテゴリの設定の仕方が意外とバラバラで、結局は登場人物から作品を割り出してカテゴライズすることにした。</p>

<p>今後も試行錯誤しながら徐々に精度はあげていきたい。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PiggerというWebサービスをつくった男がいる]]></title>
    <link href="http://namusyaka.github.com/blog/2012/12/17/github-jekyll/"/>
    <updated>2012-12-17T00:00:00+09:00</updated>
    <id>http://namusyaka.github.com/blog/2012/12/17/github-jekyll</id>
    <content type="html"><![CDATA[<p>先日の記事で触れた<a href="http://www.pigger.in/">Pigger</a>を、正式にリリースした。</p>

<h2>振り返り</h2>

<p>記事もPiggerのサイトも反響があって非常に嬉しかったが、同時にこのままだと確実に失敗するだろうなということが頭の中にあった。</p>

<p>基本的に登録をしてくれる人はWeb開発者であり、メインのユーザーとなる非開発者の登録がほとんどと言っていいほど無かったのだ。</p>

<p>加えて、開発者を含めたユーザーをPiggerに停めておく(あるいは、リピーターにするような)仕組みが全く無いというのも、持続的な成長という目標を(自分の中で)掲げている上での不安要素だった。</p>

<p>そういった問題を解決すべく、<a href="http://www.pigger.in/pages/diff">いくつかの機能を追加</a>した。</p>

<h2>デザイン</h2>

<p>がらっと変わった。</p>

<p>かなりTwitterや他のサービスを意識したようなデザインになってしまった。</p>

<h2>果たしてこれで解決できるか</h2>

<p>正直なところわからない。</p>

<p>ただ、今後もPiggerは大事に作って行きたいと思っているので、ユーザーの意見や要望を積極的に取り入れて問題点を改善していくことができればいいかなと思っている。</p>

<p>大ゴケしたらそれどころじゃないけども。</p>

<h2>開発について</h2>

<p>開発メンバーは珍しく自分一人。</p>

<p>開発期間は一ヶ月半くらい。</p>

<h3>システムの実装 &amp; 運用</h3>

<p>システムは主にSinatra。</p>

<p>データベース周りではActiveRecordを使った。</p>

<p>また、Passengerを最近気に入っているので使っている。</p>

<p>UI構築は例に依ってjQuery等は使わないで書いた。</p>

<p>しかしある程度抽象化しないとそろそろきついので、シンプルなライブラリっぽいものはPiggerのために書くかもしれない。</p>

<h3>その他</h3>

<p>デザインセンスなさすぎしんどい。</p>

<p>バグありそう。</p>

<p>報告してくれたら直すので宜しくお願いします＞＜</p>

<h2>総括</h2>

<p>まず自分が必要だと思ったものを同じく必要としている人がいることが嬉しかった。</p>

<p>PiggerはそういったWeb開発者の人達も、Webサービスを利用する人達も楽しめるようなプラットフォームにしていきたい(願望)。</p>

<p>がんばります。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PiggerというWebサービスをつくっている話]]></title>
    <link href="http://namusyaka.github.com/blog/2012/12/11/github-jekyll/"/>
    <updated>2012-12-11T00:00:00+09:00</updated>
    <id>http://namusyaka.github.com/blog/2012/12/11/github-jekyll</id>
    <content type="html"><![CDATA[<h2>全然ウケないWebサービス</h2>

<p>個人でWebサービスを作っている人ならわかるかと思うが、せっかくWebサービスを作ってもほとんど人に見られずに終わるということが往々にしてある。</p>

<p>自分が思っている原因のいくつかを以下に挙げる。</p>

<ul>
<li>Webは開発のハードルが低い。故に参入しやすい。故に競合が多い。</li>
<li>デスクトップアプリケーションはVector等で公開し、フィードバックを得られたり、広められたりするのに対し、Webサービスにはそれに相当するサービスがないっぽい。</li>
</ul>


<p>もちろん、自分の技術力や企画力など、他にも原因は考えられるが、仮に素晴らしい技術力・企画力を持っていたとしても上記のようなことが原因で上手くいかないケースがあるように思える。</p>

<p>逆に、知名度が高い人であれば、言い方は悪いが特筆すべき点もないようなサービスでも(良い悪いは抜きにして)一定の評価を得ることが出来る。出来てしまう。</p>

<p>無名開発者があまりに可哀想である(自分を含めて)。</p>

<p>そういった問題を解決するものとして、Chrome Web Storeには期待していたが今一日本では注目されていないようだし、Mozillaも何かやってたけどようわからん。</p>

<p>ツクログもイメージに近かったんだけど、盛況とは言えない状況なだけに残念。</p>

<h2>自分でオンラインマーケット的なサービスを作ってみることにした</h2>

<p>マーケットといっても名ばかりで、使用は完全に無料。</p>

<p>開発者は自分のつくったWebサービスを公開して、ユーザーのフィードバックを待ったり、他の開発者のサービスにコメントをできるようにした。</p>

<p>また、開発者は欲しいものリストを登録できるので、サービスを見たユーザーが何か贈ってくれるかもしれない。</p>

<p>ありきたりではあるが、ランキングもトップに設置してみた。</p>

<p>UUを参考に生成しているので、表示されているPVはランキングには影響しない。</p>

<p>このサービス自体、特別何かコレ！といった機能を持つわけではないんだけど、持続的に一般ユーザーにみてもらえるようになれば、無名開発者にとっては凄くありがたいなと思っている。</p>

<p>とりあえず今はベータ版という位置づけで、公式のリリース時にはデザインは大きく変更して、機能も増やす予定。</p>

<h2>開発</h2>

<p>開発については色々思うことがあるので、後日また書く。</p>

<h2>開発中だけど登録してくれるとうれしいな</h2>

<p><a href="http://www.pigger.in/">Piggerβ</a></p>

<p>バグ・脆弱性・意見・要望は<a href="http://twitter.com/namusyaka">Twitter</a>のDMで教えてくだしあ</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Whitespaceでヴィジュネル暗号を実装した]]></title>
    <link href="http://namusyaka.github.com/blog/2012/12/10/github-jekyll/"/>
    <updated>2012-12-10T00:00:00+09:00</updated>
    <id>http://namusyaka.github.com/blog/2012/12/10/github-jekyll</id>
    <content type="html"><![CDATA[<p><a href="http://ja.wikipedia.org/wiki/%E3%83%B4%E3%82%A3%E3%82%B8%E3%83%A5%E3%83%8D%E3%83%AB%E6%9A%97%E5%8F%B7">ヴィジュネル暗号</a></p>

<p><a href="http://ws2js.luilak.net/samples/vigenere.ws">Vigenere.ws</a></p>

<p>以前紹介した<a href="http://ws2js.luilak.net/interpreter.html">Whitespaceインタプリタ</a>のサンプルにも追加しておきました。</p>

<p>ちなみに、鍵を一文字に設定するとシーザー暗号と同じになり、N一文字を設定するとROT13と同じ挙動になります。</p>

<p>また、鍵は大文字小文字を区別しません。</p>

<p>起業するって意気込んでいたくせに、こいつは一体何をやっているんだという話ですね。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WhitespaceをJavaScriptに変換するライブラリとWhitespaceインタプリタを作った]]></title>
    <link href="http://namusyaka.github.com/blog/2012/12/04/github-jekyll/"/>
    <updated>2012-12-04T00:00:00+09:00</updated>
    <id>http://namusyaka.github.com/blog/2012/12/04/github-jekyll</id>
    <content type="html"><![CDATA[<p><a href="http://luilak.net/">Luilak</a>で、WhitespaceをJavaScriptに変換するライブラリを作った。</p>

<p><a href="http://ws2js.luilak.net/">WS2JS</a></p>

<p><a href="http://ws2js.luilak.net/interpreter.html">Whitespace インタプリタ</a></p>

<p><a href="https://github.com/Luilak/WS2JS">Github</a></p>

<p>インタプリタにはいくつかサンプルも用意してあって、なかなか面白いかと思う。</p>

<p>一番気に入っているのはフィボナッチ。</p>

<h2>簡単な説明</h2>

<p>Usageにもあるが、WS2JS.convertにWhitespaceのコードを渡すとJavaScriptに変換されたコードの文字列が返る。</p>

<p>それをevalすることでWhitespaceを実行するという仕組み。</p>

<p>詳しい関数の説明などは<a href="http://ws2js.luilak.net/document.html">Document</a>を読んでください。</p>

<h2>ちなみに</h2>

<p>これは<a href="http://ksnctf.sweetduet.info/">某CTF</a>に触発されて作った。
これを使えば、ある問題を簡単に解けるようになるかも。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopressのデザインテーマを変更する]]></title>
    <link href="http://namusyaka.github.com/blog/2012/10/03/github-jekyll/"/>
    <updated>2012-10-03T00:00:00+09:00</updated>
    <id>http://namusyaka.github.com/blog/2012/10/03/github-jekyll</id>
    <content type="html"><![CDATA[<p>Octopressは素晴らしいし、デフォルトのクラシックもかっこいいんだけど如何せん利用者がほとんどデフォルトのまま。
かといってSCSSとかだるいし、自分独自とはいかないまでもデザインは変更したかった。
そこで見つけたのがhttps://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes
ハイクオリティなテーマがいっぱいあるので、自分好みのやつを使えば良いと思う。
使い方は書いてある通り。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd octopress
</span><span class='line'>$ git clone GIT_URL .themes/THEME_NAME
</span><span class='line'>$ rake install['THEME_NAME']
</span><span class='line'>$ rake generate
</span><span class='line'>$ rake preview</span></code></pre></td></tr></table></div></figure>


<p>後は、http://localhost:4000/ でデザインの確認をしつつ、いい感じだとおもったらrake deploy。</p>

<p>octopressいいね！</p>

<h2>TypeScript</h2>


<p>旨み成分分析したい。</p>

<p>見難いと思うけど上がTypeScriptから吐き出されたJavaScript。
下がTypeScript。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">Hoge</span><span class="p">;</span>
</span><span class='line'><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">Hoge</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">Fuga</span> <span class="o">=</span> <span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="kd">function</span> <span class="nx">Fuga</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">x</span> <span class="o">=</span> <span class="nx">x</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="nx">Fuga</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">increment</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="o">++</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="p">;</span>
</span><span class='line'>        <span class="p">};</span>
</span><span class='line'>        <span class="nx">Fuga</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">decrement</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="o">--</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="p">;</span>
</span><span class='line'>        <span class="p">};</span>
</span><span class='line'>        <span class="k">return</span> <span class="nx">Fuga</span><span class="p">;</span>
</span><span class='line'>    <span class="p">})();</span>
</span><span class='line'>    <span class="kd">function</span> <span class="nx">plus</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">fuga</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Fuga</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="nx">fuga</span><span class="p">.</span><span class="nx">increment</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">Hoge</span><span class="p">.</span><span class="nx">plus</span> <span class="o">=</span> <span class="nx">plus</span><span class="p">;</span>
</span><span class='line'>    <span class="kd">function</span> <span class="nx">minus</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">fuga</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Fuga</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="nx">fuga</span><span class="p">.</span><span class="nx">decrement</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nx">Hoge</span><span class="p">.</span><span class="nx">minus</span> <span class="o">=</span> <span class="nx">minus</span><span class="p">;</span>
</span><span class='line'><span class="p">})(</span><span class="nx">Hoge</span> <span class="o">||</span> <span class="p">(</span><span class="nx">Hoge</span> <span class="o">=</span> <span class="p">{}));</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>module Hoge {
</span><span class='line'>  class Fuga {
</span><span class='line'>    constructor(public x: number) {}
</span><span class='line'>    increment() { return ++this.x }
</span><span class='line'>    decrement() { return --this.x }
</span><span class='line'>  }
</span><span class='line'>  export function plus (n: number) {
</span><span class='line'>    var fuga = new Fuga(n);
</span><span class='line'>    return fuga.increment();
</span><span class='line'>  }
</span><span class='line'>  export function minus (n: number) {
</span><span class='line'>    var fuga = new Fuga(n);
</span><span class='line'>    return fuga.decrement();
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p><a href="http://www.typescriptlang.org/">Welcome to TypeScript</a>からdocx形式かpdf形式でSpecification読めます。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby4Misawaをちょっと改良した件]]></title>
    <link href="http://namusyaka.github.com/blog/2012/10/02/github-jekyll/"/>
    <updated>2012-10-02T00:00:00+09:00</updated>
    <id>http://namusyaka.github.com/blog/2012/10/02/github-jekyll</id>
    <content type="html"><![CDATA[<p>以前公開したしょうもない作品の中にRuby4Misawaというものがある。
そうそうカテゴリなんか増えんだろうと思って、予めスクレイピングして取っておいたカテゴリ用Hashをソースに直書きしていたんだけど
久しぶりにミサワブログを見たらカテゴリが増えていた。
毎度こっちで対応するのも面倒なので、スクリプトを実行する度にカテゴリ用Hashを取得するようにした。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># -*- encoding: UTF-8 -*-</span>
</span><span class='line'>
</span><span class='line'><span class="sx">%w(</span>
</span><span class='line'><span class="sx">  uri</span>
</span><span class='line'><span class="sx">  open-uri</span>
</span><span class='line'><span class="sx">  kconv</span>
</span><span class='line'><span class="sx">  optparse</span>
</span><span class='line'><span class="sx">  rubygems</span>
</span><span class='line'><span class="sx">  nokogiri</span>
</span><span class='line'><span class="sx">)</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span> <span class="nb">name</span> <span class="o">|</span> <span class="nb">require</span> <span class="nb">name</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Misawa</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">class</span> <span class="nc">NotFoundError</span> <span class="o">&lt;</span> <span class="no">ArgumentError</span><span class="p">;</span> <span class="k">end</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="no">DOMAIN</span> <span class="o">=</span> <span class="s1">&#39;http://jigokuno.com/&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="vc">@@categories</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>
</span><span class='line'>  <span class="no">Nokogiri</span><span class="o">.</span><span class="n">HTML</span><span class="p">(</span><span class="nb">open</span><span class="p">(</span><span class="no">DOMAIN</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">)</span><span class="o">.</span><span class="n">css</span><span class="p">(</span><span class="s1">&#39;dl&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">dl</span><span class="o">|</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">dl</span><span class="o">.</span><span class="n">children</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">inner_html</span><span class="o">.</span><span class="n">toutf8</span> <span class="o">==</span> <span class="s1">&#39;惚れさせ男子達&#39;</span>
</span><span class='line'>      <span class="n">dl</span><span class="o">.</span><span class="n">children</span><span class="o">[</span><span class="mi">2</span><span class="o">].</span><span class="n">children</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="n">children</span><span class="o">.</span><span class="n">to_a</span><span class="o">.</span><span class="n">delete_if</span><span class="p">{</span><span class="o">|</span><span class="n">node</span><span class="o">|</span> <span class="n">node</span><span class="o">.</span><span class="n">class</span> <span class="o">==</span> <span class="no">Nokogiri</span><span class="o">::</span><span class="no">XML</span><span class="o">::</span><span class="no">Text</span><span class="p">}</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">li</span><span class="o">|</span>
</span><span class='line'>        <span class="n">a</span> <span class="o">=</span> <span class="n">li</span><span class="o">.</span><span class="n">child</span>
</span><span class='line'>        <span class="vc">@@categories</span><span class="o">[</span><span class="n">a</span><span class="o">.</span><span class="n">text</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="sr">/(.+?)(?:\([0-9]+\))?$/</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="mi">0</span><span class="o">]]</span> <span class="o">=</span> <span class="n">a</span><span class="o">[</span><span class="ss">:href</span><span class="o">].</span><span class="n">scan</span><span class="p">(</span><span class="sr">/cid=([0-9]+)/</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">attr_reader</span> <span class="ss">:category</span><span class="p">,</span> <span class="ss">:page</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">category</span><span class="p">,</span> <span class="n">page</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="k">raise</span> <span class="no">NotFoundError</span> <span class="k">unless</span> <span class="vc">@@categories</span><span class="o">[</span><span class="n">category</span><span class="o">]</span>
</span><span class='line'>    <span class="vi">@category</span> <span class="o">=</span> <span class="vc">@@categories</span><span class="o">[</span><span class="n">category</span><span class="o">]</span>
</span><span class='line'>    <span class="vi">@page</span> <span class="o">=</span> <span class="n">page</span> <span class="o">=~</span> <span class="sr">/^[0-9]+?\.\.[0-9]+?$/</span> <span class="p">?</span> <span class="nb">eval</span><span class="p">(</span><span class="n">page</span><span class="p">)</span> <span class="p">:</span> <span class="n">page</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">scrape</span>
</span><span class='line'>    <span class="n">create_uri</span><span class="o">.</span><span class="n">inject</span><span class="p">(</span><span class="o">[]</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span> <span class="n">result</span><span class="p">,</span> <span class="n">uri</span> <span class="o">|</span>
</span><span class='line'>      <span class="n">body</span> <span class="o">=</span> <span class="n">get_body</span><span class="p">(</span><span class="n">uri</span><span class="p">)</span>
</span><span class='line'>      <span class="no">Nokogiri</span><span class="o">.</span><span class="n">HTML</span><span class="p">(</span><span class="n">body</span><span class="p">)</span><span class="o">.</span><span class="n">css</span><span class="p">(</span><span class="s1">&#39;img.pict&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span> <span class="n">img</span> <span class="o">|</span> <span class="n">result</span> <span class="o">&lt;&lt;</span> <span class="n">img</span><span class="o">[</span><span class="s1">&#39;src&#39;</span><span class="o">]</span> <span class="p">}</span> <span class="k">if</span> <span class="n">body</span>
</span><span class='line'>      <span class="n">result</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">class</span> <span class="o">&lt;&lt;</span> <span class="nb">self</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">save_misawa</span><span class="p">(</span><span class="n">category</span><span class="p">,</span> <span class="n">page</span><span class="p">)</span>
</span><span class='line'>      <span class="n">misawa</span> <span class="o">=</span> <span class="nb">self</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">category</span><span class="p">,</span> <span class="n">page</span><span class="p">)</span>
</span><span class='line'>      <span class="n">misawa</span><span class="o">.</span><span class="n">scrape</span><span class="o">.</span><span class="n">each_with_index</span> <span class="k">do</span> <span class="o">|</span> <span class="n">src</span><span class="p">,</span> <span class="n">i</span> <span class="o">|</span>
</span><span class='line'>        <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">misawa</span><span class="o">.</span><span class="n">category</span><span class="si">}</span><span class="s2">-</span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">.gif&quot;</span><span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span> <span class="n">f</span> <span class="o">|</span> <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">misawa</span><span class="o">.</span><span class="n">get_body</span><span class="p">(</span><span class="n">src</span><span class="p">))</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">uri_misawa</span><span class="p">(</span><span class="n">category</span><span class="p">,</span> <span class="n">page</span><span class="p">)</span>
</span><span class='line'>      <span class="n">misawa</span> <span class="o">=</span> <span class="nb">self</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">category</span><span class="p">,</span> <span class="n">page</span><span class="p">)</span>
</span><span class='line'>      <span class="n">misawa</span><span class="o">.</span><span class="n">scrape</span><span class="o">.</span><span class="n">each_with_index</span> <span class="k">do</span> <span class="o">|</span> <span class="n">src</span><span class="p">,</span> <span class="n">i</span> <span class="o">|</span>
</span><span class='line'>        <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">misawa</span><span class="o">.</span><span class="n">category</span><span class="si">}</span><span class="s2">-</span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2"> : </span><span class="si">#{</span><span class="n">src</span><span class="si">}</span><span class="s2"> &quot;</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">method_missing</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>      <span class="k">raise</span> <span class="no">ArgumentError</span><span class="p">;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">get_body</span><span class="p">(</span><span class="n">uri</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">open</span><span class="p">(</span><span class="no">URI</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="n">uri</span><span class="p">))</span><span class="o">.</span><span class="n">read</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">create_uri</span>
</span><span class='line'>    <span class="k">if</span> <span class="vi">@page</span><span class="o">.</span><span class="n">is_a?</span><span class="p">(</span><span class="no">Range</span><span class="p">)</span>
</span><span class='line'>      <span class="n">base</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="no">DOMAIN</span><span class="si">}</span><span class="s2">/?cid=</span><span class="si">#{</span><span class="vi">@category</span><span class="si">}</span><span class="s2">&amp;page=&quot;</span>
</span><span class='line'>      <span class="vi">@page</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span> <span class="n">i</span> <span class="o">|</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">base</span><span class="si">}#{</span><span class="n">i</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="o">[</span><span class="s2">&quot;</span><span class="si">#{</span><span class="no">DOMAIN</span><span class="si">}</span><span class="s2">/?cid=</span><span class="si">#{</span><span class="vi">@category</span><span class="si">}</span><span class="s2">&amp;page=</span><span class="si">#{</span><span class="vi">@page</span><span class="si">}</span><span class="s2">&quot;</span><span class="o">]</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="vg">$0</span> <span class="o">===</span> <span class="bp">__FILE__</span>
</span><span class='line'>
</span><span class='line'>  <span class="no">OptionParser</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span> <span class="o">|</span> <span class="n">opt</span> <span class="o">|</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">arguments</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">opt</span><span class="o">.</span><span class="n">on</span><span class="p">(</span><span class="s1">&#39;-t [TYPE]&#39;</span><span class="p">,</span> <span class="s1">&#39;--type [TYPE]&#39;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span> <span class="n">value</span> <span class="o">|</span>
</span><span class='line'>      <span class="n">arguments</span><span class="o">[</span><span class="ss">:type</span><span class="o">]</span> <span class="o">=</span> <span class="n">value</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">opt</span><span class="o">.</span><span class="n">on</span><span class="p">(</span><span class="s1">&#39;-p [PAGE]&#39;</span><span class="p">,</span> <span class="s1">&#39;--page [PAGE]&#39;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span> <span class="n">value</span> <span class="o">|</span>
</span><span class='line'>      <span class="n">arguments</span><span class="o">[</span><span class="ss">:page</span><span class="o">]</span> <span class="o">=</span> <span class="n">value</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">opt</span><span class="o">.</span><span class="n">on</span><span class="p">(</span><span class="s1">&#39;-c [CATEGORY]&#39;</span><span class="p">,</span> <span class="s1">&#39;--category [CATEGORY]&#39;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span> <span class="n">value</span> <span class="o">|</span>
</span><span class='line'>      <span class="n">arguments</span><span class="o">[</span><span class="ss">:category</span><span class="o">]</span> <span class="o">=</span> <span class="n">value</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">opt</span><span class="o">.</span><span class="n">parse!</span><span class="p">(</span><span class="no">ARGV</span><span class="p">)</span>
</span><span class='line'>    <span class="no">Misawa</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">arguments</span><span class="o">[</span><span class="ss">:type</span><span class="o">]</span> <span class="o">||</span> <span class="s1">&#39;uri&#39;</span><span class="si">}</span><span class="s2">_misawa&quot;</span><span class="p">,</span> <span class="n">arguments</span><span class="o">[</span><span class="ss">:category</span><span class="o">]</span><span class="p">,</span> <span class="n">arguments</span><span class="o">[</span><span class="ss">:page</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>前述した点以外にも、今までHTTPリクエスト時に例外捕捉していたところを消したりした。
今思えば、従来の通りに実装するとすればbeginとかendとか要らなかったなあ。
def hoge; rescue OpenURI::HTTPError; end;とか出来たわけで。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScriptのHTMLCollectionに対してforEachみたいなのをしたい]]></title>
    <link href="http://namusyaka.github.com/blog/2012/10/01/github-jekyll/"/>
    <updated>2012-10-01T00:00:00+09:00</updated>
    <id>http://namusyaka.github.com/blog/2012/10/01/github-jekyll</id>
    <content type="html"><![CDATA[<p>HTMLCollectionにはitem, namedItemといったメソッドしか無く、for文で走査するか、タイトルのようなことをやろうと思ったら
一度配列に変換してforEach使うとかしなきゃいけないけど、forEach自体は古いブラウザでは動かない。
というわけでサラッと書いた。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">SubHTMLCollection</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">collection</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">collection</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">element</span><span class="p">;</span> <span class="nx">element</span> <span class="o">=</span> <span class="nx">collection</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span> <span class="o">++</span><span class="nx">i</span><span class="p">)</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">element</span><span class="p">);</span>
</span><span class='line'>  <span class="k">return</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="nx">SubHTMLCollection</span><span class="p">.</span><span class="nx">prototype</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">each</span> <span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">callback</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">element</span><span class="p">;</span> <span class="nx">element</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">collection</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span> <span class="o">++</span><span class="nx">i</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">callback</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="nx">element</span><span class="p">,</span> <span class="nx">i</span><span class="p">);</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">reverseEach</span> <span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">callback</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">element</span><span class="p">;</span> <span class="nx">element</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">collection</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span> <span class="o">--</span><span class="nx">i</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">callback</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="nx">element</span><span class="p">,</span> <span class="nx">i</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>どっかで見たArray.sliceというようなクラスメソッド的な使い方、普通に出来ると思ってたんだけどChromeでこけたのでArray.prototype.slice.call使う事にしたら
<del>Array.apply使えばいいんじゃねと指摘されて、それもそうだなということで変更した。
今回のケースは問題ないが、Array.applyを使って配列に変換する場合は変換前のオブジェクトの要素数が一つ(length等は除く)で、尚かつそれが数値である場合に正常な変換が出来ないので注意したい。</del>
<ins>IE8以下のブラウザではapply(およびcall)の第二引数にHTMLCollection渡すとこけたので、forでなめて配列に変換するようにした。</ins></p>

<h2>移転</h2>


<p>はてなダイアリーから移転した。
hatena.xmlをoctopress用へ変換するスクリプトを汎用性のある状態で残したかったが、元々はてなダイアリーの書き方が汚かったのでかなりオレオレ仕様になってしまった。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rexml/document&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;erb&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">HatenaToOctopress</span>
</span><span class='line'>
</span><span class='line'>  <span class="vc">@@octo_format</span> <span class="o">=</span> <span class="o">&lt;&lt;-</span><span class="no">MKDN</span>
</span><span class='line'><span class="sh">---</span>
</span><span class='line'><span class="sh">layout: post</span>
</span><span class='line'><span class="sh">title: &lt;%= @item[:title] %&gt;</span>
</span><span class='line'><span class="sh">date: &lt;%= @item[:date] %&gt;</span>
</span><span class='line'><span class="sh">comments: true</span>
</span><span class='line'><span class="sh">categories: &lt;%= @item[:categories] ? @item[:categories].inspect : &#39;&#39; %&gt;</span>
</span><span class='line'><span class="sh">---</span>
</span><span class='line'><span class="sh">&lt;%= @item[:body] %&gt;</span>
</span><span class='line'><span class="no">  MKDN</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span> <span class="p">(</span><span class="n">data</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@data</span> <span class="o">=</span> <span class="n">data</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">import</span>
</span><span class='line'>    <span class="n">doc</span> <span class="o">=</span> <span class="no">REXML</span><span class="o">::</span><span class="no">Document</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="vi">@data</span><span class="p">)</span>
</span><span class='line'>    <span class="n">doc</span><span class="o">.</span><span class="n">elements</span><span class="o">.</span><span class="n">each</span><span class="p">(</span><span class="s2">&quot;diary/day&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">day</span><span class="o">|</span>
</span><span class='line'>      <span class="vi">@item</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>      <span class="vi">@item</span><span class="o">[</span><span class="ss">:date</span><span class="o">]</span> <span class="o">=</span> <span class="n">day</span><span class="o">.</span><span class="n">attributes</span><span class="o">[</span><span class="s1">&#39;date&#39;</span><span class="o">]</span>
</span><span class='line'>      <span class="n">day</span><span class="o">.</span><span class="n">elements</span><span class="o">.</span><span class="n">each</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">body</span><span class="o">|</span>
</span><span class='line'>        <span class="n">lines</span> <span class="o">=</span> <span class="n">body</span><span class="o">.</span><span class="n">text</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="sr">/\n/</span><span class="p">)</span>
</span><span class='line'>        <span class="n">params</span> <span class="o">=</span> <span class="n">lines</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="n">scan</span><span class="p">(</span><span class="sr">/^\*[0-9]{10}\*(?:\[(.*)\])?(.+?)$/</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>        <span class="vi">@item</span><span class="o">[</span><span class="ss">:categories</span><span class="o">]</span> <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;][&quot;</span><span class="p">)</span> <span class="k">if</span> <span class="n">params</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>        <span class="vi">@item</span><span class="o">[</span><span class="ss">:title</span><span class="o">]</span> <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>        <span class="vi">@item</span><span class="o">[</span><span class="ss">:body</span><span class="o">]</span> <span class="o">=</span> <span class="n">lines</span><span class="o">[</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="o">-</span><span class="mi">1</span><span class="o">].</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/&gt;\|(.+?)\|(.+?)\|\|&lt;/m</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>          <span class="o">&lt;&lt;-</span><span class="no">CODE</span>
</span><span class='line'><span class="sh">\{\% codeblock lang:#{$1} \%\}</span>
</span><span class='line'><span class="sh">#{$2}</span>
</span><span class='line'><span class="sh">\{\% endcodeblock \%\}</span>
</span><span class='line'><span class="no">          CODE</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>        <span class="vi">@item</span><span class="o">[</span><span class="ss">:body</span><span class="o">].</span><span class="n">gsub!</span><span class="p">(</span><span class="sr">/&lt;h4&gt;(.+?)&lt;\/h4&gt;|\*[0-9]{10}\*(?:\[.*\])?(.+?)\n/</span><span class="p">)</span> <span class="p">{</span> <span class="s2">&quot;&lt;h2&gt;</span><span class="si">#{</span><span class="vg">$1</span> <span class="o">||</span> <span class="vg">$2</span><span class="si">}</span><span class="s2">&lt;/h2&gt;</span><span class="se">\n</span><span class="s2">&quot;</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="n">post</span> <span class="no">ERB</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="vc">@@octo_format</span><span class="p">)</span><span class="o">.</span><span class="n">result</span><span class="p">(</span><span class="nb">binding</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">read_file</span> <span class="p">(</span><span class="n">path</span><span class="p">)</span>
</span><span class='line'>    <span class="n">hatena2octo</span> <span class="o">=</span> <span class="nb">self</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">path</span><span class="p">))</span>
</span><span class='line'>    <span class="n">hatena2octo</span><span class="o">.</span><span class="n">import</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">post</span> <span class="p">(</span><span class="n">post_data</span><span class="p">)</span>
</span><span class='line'>      <span class="n">path</span> <span class="o">=</span> <span class="s2">&quot;source/_posts/</span><span class="si">#{</span><span class="vi">@item</span><span class="o">[</span><span class="ss">:date</span><span class="o">]</span><span class="si">}</span><span class="s2">-github-jekyll.mkd&quot;</span>
</span><span class='line'>      <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="no">File</span><span class="o">.</span><span class="n">exist?</span><span class="p">(</span><span class="n">path</span><span class="p">)</span> <span class="p">?</span> <span class="s2">&quot;a&quot;</span> <span class="p">:</span> <span class="s2">&quot;w&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">file</span><span class="o">|</span>
</span><span class='line'>        <span class="n">file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">post_data</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="vg">$0</span> <span class="o">==</span> <span class="bp">__FILE__</span>
</span><span class='line'>   <span class="no">HatenaToOctopress</span><span class="o">.</span><span class="n">read_file</span><span class="p">(</span><span class="s2">&quot;hatena.xml&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[チャベリ裏口に似たサービス「チャベリ勝手口」をつくった]]></title>
    <link href="http://namusyaka.github.com/blog/2012/08/29/github-jekyll/"/>
    <updated>2012-08-29T00:00:00+09:00</updated>
    <id>http://namusyaka.github.com/blog/2012/08/29/github-jekyll</id>
    <content type="html"><![CDATA[<p>手抜きなのであまり優れたユーザビリティとはいえないんですが公開します。
チャベリ裏口と違うのはch0.chaberi.comを取得するというところでしょうか。</p>

<p><a href="http://chaberi.namusyaka.info/">チャベリ勝手口α</a></p>

<p>個人サービスとはいえ、いい加減なんでもかんでも数時間で作っちゃおうとする癖直したいですね。
早く動くところがみたいという欲望が先行してクオリティもヘチマも無いようなことになります。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[esolangインタプリタの件]]></title>
    <link href="http://namusyaka.github.com/blog/2012/07/26/github-jekyll/"/>
    <updated>2012-07-26T00:00:00+09:00</updated>
    <id>http://namusyaka.github.com/blog/2012/07/26/github-jekyll</id>
    <content type="html"><![CDATA[<p>流石に手を抜き過ぎだろと言われたのでそれぞれテストページを用意</p>

<p><a href="http://namusyaka.info/esolang/brainfuck.html" target="_blank">Brainf*ck Interpreter</a>
<a href="http://namusyaka.info/esolang/monamona.html" target="_blank">MONAmona Interpreter</a>
<a href="http://namusyaka.info/esolang/ook.html" target="_blank">Ook Interpreter</a></p>

<p>手を抜いてるところはかわらないんですけどね</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScriptでBrainf*ckやOok!やMONAmonaのインタプリタを実装&SeaSlugについて]]></title>
    <link href="http://namusyaka.github.com/blog/2012/07/20/github-jekyll/"/>
    <updated>2012-07-20T00:00:00+09:00</updated>
    <id>http://namusyaka.github.com/blog/2012/07/20/github-jekyll</id>
    <content type="html"><![CDATA[<h2>Esolangインタプリタの話</h2>


<p>Github : <a href="https://github.com/namusyaka/sandbox/tree/master/Esolang">sandbox/Esolang</a>
テスト(Firefoxでしか動作確認していない上にフリーズの危険性があるので注意) : <a href="http://namusyaka.info/esolang/esolang.html">Esolang</a></p>

<p>何番煎じだよ感ありますが、現実逃避したくて書きました。
難解言語と呼ばれるような言語は一つインタプリタを実装してしまえば、後はちょっといじるだけで良い場合が多いので色々実装してみると面白いと思います。
とはいえ、実装に不安な点がないわけじゃないので意見等お待ちしています。
(ちなみに、実際に使う場合等は&#8217;&lt;&#8217;や&#8217;+&#8217;のような記号にいちいち関数と関連づけて実行するよりも、switch文等で分岐させたほうが絶対的に速いです)</p>

<h2>SeaSlug</h2>


<p>サイト : <a href="http://seaslug.luilak.net/">SeaSlug</a>
VimとVimScriptのWEB実装みたいなやつです。
将来的にはウェブベースの統合開発環境だったりに組み込んで使いたいなと思っています。
ところが七月中旬にはリリース予定だったのに、なかなか都合がつかなくて全然すすんでません。
時間をうまく使える様になりたいなあ。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mr.Easiness閉鎖しましたってことと近況について]]></title>
    <link href="http://namusyaka.github.com/blog/2012/06/27/github-jekyll/"/>
    <updated>2012-06-27T00:00:00+09:00</updated>
    <id>http://namusyaka.github.com/blog/2012/06/27/github-jekyll</id>
    <content type="html"><![CDATA[<h2>Mr.Easiness閉鎖の件</h2>


<p>タイトルにあるとおり閉鎖しました。
理由は色々ありますが、主として削除依頼にいちいち対応するのがだるかったことが挙げられます。</p>

<h2>近況</h2>


<p>ぼちぼち稼ぎつつLuilakの方で色々やってます。
現在のメインプロジェクトはエディタ＋付属言語の開発です。
自分達で作った言語でプログラミングをするというのは新鮮で面白いですね。
七月中旬にはリリース予定です。</p>

<p>おわり。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ぺージ内容を選択(しなくても可)してTwitterにつぶやくスクリプト。]]></title>
    <link href="http://namusyaka.github.com/blog/2012/04/11/github-jekyll/"/>
    <updated>2012-04-11T00:00:00+09:00</updated>
    <id>http://namusyaka.github.com/blog/2012/04/11/github-jekyll</id>
    <content type="html"><![CDATA[<p>一応IE,Opera,Firefox,Chrome,Safariで確認。</p>

<iframe border="0" frameborder="0" height="130" src="http://let.st-hatelabo.com/namusyaka/let.iframe?embed=1&code_id=gYC-xdP-qLWZNA" width="500"></iframe>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">d</span> <span class="o">=</span> <span class="nb">document</span><span class="p">,</span> <span class="nx">w</span> <span class="o">=</span> <span class="nb">window</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">getSelectedText</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="s1">&#39;\v&#39;</span> <span class="o">===</span> <span class="s1">&#39;v&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">createRange</span><span class="p">().</span><span class="nx">text</span><span class="p">;</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="k">return</span> <span class="p">(</span><span class="s1">&#39;getSelection&#39;</span> <span class="k">in</span> <span class="nx">w</span> <span class="o">?</span> <span class="nx">w</span> <span class="o">:</span> <span class="nx">d</span><span class="p">).</span><span class="nx">getSelection</span><span class="p">().</span><span class="nx">toString</span><span class="p">();</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">title</span> <span class="o">=</span> <span class="nx">d</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;title&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">innerHTML</span>
</span><span class='line'>  <span class="p">,</span>   <span class="nx">selectedText</span> <span class="o">=</span> <span class="nx">getSelectedText</span><span class="p">()</span>
</span><span class='line'>  <span class="p">,</span>   <span class="nx">uri</span> <span class="o">=</span> <span class="nx">location</span><span class="p">.</span><span class="nx">href</span>
</span><span class='line'>  <span class="p">,</span>   <span class="nx">result</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="nx">selectedText</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">result</span> <span class="o">+=</span> <span class="s1">&#39;「&#39;</span> <span class="o">+</span> <span class="nx">selectedText</span> <span class="o">+</span> <span class="s1">&#39;」&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="nx">title</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">result</span> <span class="o">+=</span> <span class="nx">title</span> <span class="o">+</span> <span class="s1">&#39; | &#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">result</span> <span class="o">+=</span> <span class="nx">uri</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">w</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="s1">&#39;http://twitter.com/home?status=&#39;</span> <span class="o">+</span> <span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nx">result</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span><span class="p">;</span>
</span><span class='line'><span class="p">})();</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScriptでWebページ用付箋ブックマークレット]]></title>
    <link href="http://namusyaka.github.com/blog/2012/04/09/github-jekyll/"/>
    <updated>2012-04-09T00:00:00+09:00</updated>
    <id>http://namusyaka.github.com/blog/2012/04/09/github-jekyll</id>
    <content type="html"><![CDATA[<p>長文を読む機会が多くなってきたのは良いけど、どこまで読んだっけ？ってことが結構あるので作ってみました。</p>

<p>実行するとpromptが表示され、scrollかsaveのどちらかを入力します(どちらにも該当しない場合には何も起こりません)。
saveを入力するとlocalStorage上に現在のスクロール量が記録されます。
scrollを入力するとlocalStorage上に記録されたスクロール量分、スクロールします。
入力する英字は小文字・大文字どちらも可。
localStorageが使えないブラウザでは動きません。</p>

<iframe border="0" frameborder="0" height="130" src="http://let.st-hatelabo.com/namusyaka/let.iframe?embed=1&code_id=gYC-ydL73uv6fA" width="500"></iframe>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">todo</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">prompt</span><span class="p">(</span><span class="s1">&#39;Save or Scroll&#39;</span><span class="p">,</span> <span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">localStorage</span><span class="p">.</span><span class="nx">fusen</span><span class="p">)</span> <span class="o">?</span> <span class="s1">&#39;Scroll&#39;</span> <span class="o">:</span> <span class="s1">&#39;Save&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="sr">/save/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">todo</span><span class="p">))</span>
</span><span class='line'>    <span class="nb">window</span><span class="p">.</span><span class="nx">localStorage</span><span class="p">.</span><span class="nx">fusen</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">scrollTop</span> <span class="o">||</span> <span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">;</span>
</span><span class='line'>  <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="sr">/scroll/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">todo</span><span class="p">))</span>
</span><span class='line'>    <span class="nb">window</span><span class="p">.</span><span class="nx">scroll</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nx">localStorage</span><span class="p">.</span><span class="nx">fusen</span> <span class="o">||</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span><span class="p">;</span>
</span><span class='line'><span class="p">})();</span>
</span></code></pre></td></tr></table></div></figure>


<p>追記 2012/04/11</p>

<p>デフォルトの文字列を設定するようにした</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[大学やめます]]></title>
    <link href="http://namusyaka.github.com/blog/2012/04/06/github-jekyll/"/>
    <updated>2012-04-06T00:00:00+09:00</updated>
    <id>http://namusyaka.github.com/blog/2012/04/06/github-jekyll</id>
    <content type="html"><![CDATA[<p>個人事業主にでもなろうかと思います。
余裕ができたら<a herf="http://luilak.net">Luilak</a>を法人化します。
よろしく。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rubyで例外クラスを動的に定義する]]></title>
    <link href="http://namusyaka.github.com/blog/2012/03/18/github-jekyll/"/>
    <updated>2012-03-18T00:00:00+09:00</updated>
    <id>http://namusyaka.github.com/blog/2012/03/18/github-jekyll</id>
    <content type="html"><![CDATA[<p>グローバルの場合。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Object</span><span class="o">.</span><span class="n">const_set</span><span class="p">(</span><span class="s1">&#39;HogeError&#39;</span><span class="p">,</span> <span class="no">Class</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">ArgumentError</span><span class="p">))</span> <span class="c1"># 継承させたい例外クラスを渡す</span>
</span><span class='line'><span class="k">raise</span> <span class="no">HogeError</span>
</span></code></pre></td></tr></table></div></figure>


<p>Hoge::Fugaのようなネストされた空間の場合。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Hoge</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Fuga</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">const_set</span><span class="p">(</span><span class="s1">&#39;Piyo&#39;</span><span class="p">,</span> <span class="no">Class</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">ArgumentError</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">test</span><span class="p">;</span> <span class="k">raise</span> <span class="no">Piyo</span><span class="p">;</span> <span class="k">end</span><span class="p">;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Hoge</span><span class="o">::</span><span class="no">Fuga</span><span class="o">.</span><span class="n">test</span>
</span></code></pre></td></tr></table></div></figure>


<p>色々使い道があるかとは思いますが、例えば同じ例外クラスを継承する独自例外クラスを何個も定義する場合は以下のように書けて便利です。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Foo</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Bar</span>
</span><span class='line'>    <span class="vc">@@error_class</span> <span class="o">=</span> <span class="sx">%w( Hoge Fuga Piyo )</span>
</span><span class='line'>    <span class="vc">@@error_class</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">error</span><span class="o">|</span> <span class="nb">self</span><span class="o">.</span><span class="n">const_set</span><span class="p">(</span><span class="n">error</span><span class="p">,</span> <span class="no">Class</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">ArgumentError</span><span class="p">))</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 例外を発生させるクラスメソッドを定義</span>
</span><span class='line'>    <span class="k">class</span> <span class="o">&lt;&lt;</span> <span class="nb">self</span>
</span><span class='line'>      <span class="vc">@@error_class</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="nb">name</span><span class="o">|</span>
</span><span class='line'>        <span class="n">define_method</span> <span class="nb">name</span><span class="o">.</span><span class="n">downcase</span> <span class="k">do</span>
</span><span class='line'>          <span class="k">raise</span> <span class="nb">self</span><span class="o">.</span><span class="n">const_get</span><span class="p">(</span><span class="nb">name</span><span class="p">),</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2"> error !&quot;</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Foo</span><span class="o">::</span><span class="no">Bar</span><span class="o">.</span><span class="n">hoge</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[地獄のミサワ用スクレイピングライブラリをつくった]]></title>
    <link href="http://namusyaka.github.com/blog/2012/02/27/github-jekyll/"/>
    <updated>2012-02-27T00:00:00+09:00</updated>
    <id>http://namusyaka.github.com/blog/2012/02/27/github-jekyll</id>
    <content type="html"><![CDATA[<p>nokogiriとかoptparse使ってみたくてつくりまひた。
やたらと長いHashは、引数で受け取ったカテゴリが実在するかどうかをhttp-request飛ばして判断するようにすればなんとかなるとおもうけど、typo多そうだしやめておきまひた。
だけどカテゴリ増えるごとにコード修正すんのも面倒なんですよねー。
そのうち方針を変えるかもしれません。</p>

<p><a href="https://github.com/namusyaka/Ruby4Misawa">Ruby4Misawa/Github</a>
<a href="https://rubygems.org/gems/Ruby4Misawa">Ruby4Misawa/RubyGems</a></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># -*- encoding: UTF-8 -*-</span>
</span><span class='line'>
</span><span class='line'><span class="sx">%w( uri open-uri optparse rubygems nokogiri )</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span> <span class="nb">name</span> <span class="o">|</span>
</span><span class='line'>  <span class="nb">require</span> <span class="nb">name</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Misawa</span>
</span><span class='line'>
</span><span class='line'>  <span class="no">DOMAIN</span> <span class="o">=</span> <span class="s1">&#39;http://jigokuno.com/&#39;</span>
</span><span class='line'>  <span class="no">CATEGORIES</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;cecil&quot;</span> <span class="o">=&gt;</span> <span class="mi">79</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;D-Matt&quot;</span> <span class="o">=&gt;</span> <span class="mi">25</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;KAZ&quot;</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;KOUNOIKE&quot;</span> <span class="o">=&gt;</span> <span class="mi">29</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;masa&quot;</span> <span class="o">=&gt;</span> <span class="mi">13</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;masao&quot;</span> <span class="o">=&gt;</span> <span class="mi">53</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;NAKAYAN&quot;</span> <span class="o">=&gt;</span> <span class="mi">8</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;SYUN&quot;</span> <span class="o">=&gt;</span> <span class="mi">24</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;ルシフェル&quot;</span> <span class="o">=&gt;</span> <span class="mi">14</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;あつしさん&quot;</span> <span class="o">=&gt;</span> <span class="mi">64</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;あの御方&quot;</span> <span class="o">=&gt;</span> <span class="mi">37</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;しょうへい&quot;</span> <span class="o">=&gt;</span> <span class="mi">66</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;すなお&quot;</span> <span class="o">=&gt;</span> <span class="mi">38</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;たばっち&quot;</span> <span class="o">=&gt;</span> <span class="mi">52</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;ちんちんでか男&quot;</span> <span class="o">=&gt;</span> <span class="mi">57</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;つっちー&quot;</span> <span class="o">=&gt;</span> <span class="mi">7</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;てづっちゃん&quot;</span> <span class="o">=&gt;</span> <span class="mi">67</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;とりっぴー&quot;</span> <span class="o">=&gt;</span> <span class="mi">82</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;なかじ&quot;</span> <span class="o">=&gt;</span> <span class="mi">28</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;のぶちゃん&quot;</span> <span class="o">=&gt;</span> <span class="mi">22</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;のぼる&quot;</span> <span class="o">=&gt;</span> <span class="mi">49</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;のりすけ&quot;</span> <span class="o">=&gt;</span> <span class="mi">21</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;はしもっさん&quot;</span> <span class="o">=&gt;</span> <span class="mi">44</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;はまちゃん&quot;</span> <span class="o">=&gt;</span> <span class="mi">55</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;ぴーなっつ&quot;</span> <span class="o">=&gt;</span> <span class="mi">58</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;まみのパパ&quot;</span> <span class="o">=&gt;</span> <span class="mi">56</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;りきお&quot;</span> <span class="o">=&gt;</span> <span class="mi">85</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;エ～イチ&quot;</span> <span class="o">=&gt;</span> <span class="mi">83</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;キヨシロー&quot;</span> <span class="o">=&gt;</span> <span class="mi">17</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;キング&quot;</span> <span class="o">=&gt;</span> <span class="mi">84</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;コウヘイ&quot;</span> <span class="o">=&gt;</span> <span class="mi">3</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;シュナイダー&quot;</span> <span class="o">=&gt;</span> <span class="mi">34</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;ショップ店員&quot;</span> <span class="o">=&gt;</span> <span class="mi">12</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;ジーンズ&quot;</span> <span class="o">=&gt;</span> <span class="mi">36</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;ジェイ&quot;</span> <span class="o">=&gt;</span> <span class="mi">10</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;ソドム&quot;</span> <span class="o">=&gt;</span> <span class="mi">78</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;タケ&quot;</span> <span class="o">=&gt;</span> <span class="mi">54</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;チーポー&quot;</span> <span class="o">=&gt;</span> <span class="mi">35</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;デスピサロ&quot;</span> <span class="o">=&gt;</span> <span class="mi">46</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;ドリモグ&quot;</span> <span class="o">=&gt;</span> <span class="mi">40</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;ナイト&quot;</span> <span class="o">=&gt;</span> <span class="mi">50</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;ハリソン・フォード&quot;</span> <span class="o">=&gt;</span> <span class="mi">41</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;バイトリーダー&quot;</span> <span class="o">=&gt;</span> <span class="mi">71</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;ファイナルボム&quot;</span> <span class="o">=&gt;</span> <span class="mi">74</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;フェイク&quot;</span> <span class="o">=&gt;</span> <span class="mi">32</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;マイク&quot;</span> <span class="o">=&gt;</span> <span class="mi">65</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;ミラージュ&quot;</span> <span class="o">=&gt;</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;ラッシュさん&quot;</span> <span class="o">=&gt;</span> <span class="mi">19</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;リアル&quot;</span> <span class="o">=&gt;</span> <span class="mi">81</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;リチャード&quot;</span> <span class="o">=&gt;</span> <span class="mi">80</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;リュウー&quot;</span> <span class="o">=&gt;</span> <span class="mi">26</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;レオン&quot;</span> <span class="o">=&gt;</span> <span class="mi">59</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;吉岡&quot;</span> <span class="o">=&gt;</span> <span class="mi">6</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;久志&quot;</span> <span class="o">=&gt;</span> <span class="mi">51</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;玉木宏&quot;</span> <span class="o">=&gt;</span> <span class="mi">43</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;健二&quot;</span> <span class="o">=&gt;</span> <span class="mi">70</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;佐伯さん&quot;</span> <span class="o">=&gt;</span> <span class="mi">76</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;砂漠の狼&quot;</span> <span class="o">=&gt;</span> <span class="mi">63</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;坂本竜馬の子孫&quot;</span> <span class="o">=&gt;</span> <span class="mi">27</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;桜井&quot;</span> <span class="o">=&gt;</span> <span class="mi">39</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;時任&quot;</span> <span class="o">=&gt;</span> <span class="mi">42</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;実行委員&quot;</span> <span class="o">=&gt;</span> <span class="mi">47</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;小松っち&quot;</span> <span class="o">=&gt;</span> <span class="mi">75</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;松尾&quot;</span> <span class="o">=&gt;</span> <span class="mi">23</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;水谷&quot;</span> <span class="o">=&gt;</span> <span class="mi">11</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;袖まくり&quot;</span> <span class="o">=&gt;</span> <span class="mi">60</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;太陽 &quot;</span> <span class="o">=&gt;</span> <span class="mi">68</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;代官山&quot;</span> <span class="o">=&gt;</span> <span class="mi">33</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;大嶽一史&quot;</span> <span class="o">=&gt;</span> <span class="mi">77</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;拓真&quot;</span> <span class="o">=&gt;</span> <span class="mi">31</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;達也の兄ちゃん&quot;</span> <span class="o">=&gt;</span> <span class="mi">72</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;痴漢&quot;</span> <span class="o">=&gt;</span> <span class="mi">15</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;中村健&quot;</span> <span class="o">=&gt;</span> <span class="mi">4</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;田部&quot;</span> <span class="o">=&gt;</span> <span class="mi">20</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;東大生&quot;</span> <span class="o">=&gt;</span> <span class="mi">45</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;湯上谷&quot;</span> <span class="o">=&gt;</span> <span class="mi">16</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;藤井&quot;</span> <span class="o">=&gt;</span> <span class="mi">9</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;道明寺&quot;</span> <span class="o">=&gt;</span> <span class="mi">61</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;風雲児達&quot;</span> <span class="o">=&gt;</span> <span class="mi">86</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;北岡&quot;</span> <span class="o">=&gt;</span> <span class="mi">62</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;野村&quot;</span> <span class="o">=&gt;</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;野茂&quot;</span> <span class="o">=&gt;</span> <span class="mi">30</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;零&quot;</span> <span class="o">=&gt;</span> <span class="mi">69</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;零&quot;</span> <span class="o">=&gt;</span> <span class="mi">73</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;和田&quot;</span> <span class="o">=&gt;</span> <span class="mi">48</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">attr_reader</span> <span class="ss">:category</span><span class="p">,</span> <span class="ss">:page</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">category</span><span class="p">,</span> <span class="n">page</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@category</span> <span class="o">=</span> <span class="no">CATEGORIES</span><span class="o">[</span><span class="n">category</span><span class="o">]</span>
</span><span class='line'>    <span class="vi">@page</span> <span class="o">=</span> <span class="n">page</span> <span class="o">=~</span> <span class="sr">/^[0-9]+?\.\.[0-9]+?$/</span> <span class="p">?</span> <span class="nb">eval</span><span class="p">(</span><span class="n">page</span><span class="p">)</span> <span class="p">:</span> <span class="n">page</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">scrape</span>
</span><span class='line'>    <span class="n">create_uri</span><span class="o">.</span><span class="n">inject</span><span class="p">(</span><span class="o">[]</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span> <span class="n">result</span><span class="p">,</span> <span class="n">uri</span> <span class="o">|</span>
</span><span class='line'>      <span class="n">body</span> <span class="o">=</span> <span class="n">get_body</span><span class="p">(</span><span class="n">uri</span><span class="p">)</span>
</span><span class='line'>      <span class="no">Nokogiri</span><span class="o">.</span><span class="n">HTML</span><span class="p">(</span><span class="n">body</span><span class="p">)</span><span class="o">.</span><span class="n">css</span><span class="p">(</span><span class="s1">&#39;img.pict&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span> <span class="n">img</span> <span class="o">|</span> <span class="n">result</span> <span class="o">&lt;&lt;</span> <span class="n">img</span><span class="o">[</span><span class="s1">&#39;src&#39;</span><span class="o">]</span> <span class="p">}</span> <span class="k">if</span> <span class="n">body</span>
</span><span class='line'>      <span class="n">result</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">class</span> <span class="o">&lt;&lt;</span> <span class="nb">self</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">save_misawa</span><span class="p">(</span><span class="n">category</span><span class="p">,</span> <span class="n">page</span><span class="p">)</span>
</span><span class='line'>      <span class="n">misawa</span> <span class="o">=</span> <span class="nb">self</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">category</span><span class="p">,</span> <span class="n">page</span><span class="p">)</span>
</span><span class='line'>      <span class="n">misawa</span><span class="o">.</span><span class="n">scrape</span><span class="o">.</span><span class="n">each_with_index</span> <span class="k">do</span> <span class="o">|</span> <span class="n">src</span><span class="p">,</span> <span class="n">i</span> <span class="o">|</span>
</span><span class='line'>        <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">misawa</span><span class="o">.</span><span class="n">category</span><span class="si">}</span><span class="s2">-</span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">.gif&quot;</span><span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span> <span class="n">f</span> <span class="o">|</span> <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">misawa</span><span class="o">.</span><span class="n">get_body</span><span class="p">(</span><span class="n">src</span><span class="p">))</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">uri_misawa</span><span class="p">(</span><span class="n">category</span><span class="p">,</span> <span class="n">page</span><span class="p">)</span>
</span><span class='line'>      <span class="n">misawa</span> <span class="o">=</span> <span class="nb">self</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">category</span><span class="p">,</span> <span class="n">page</span><span class="p">)</span>
</span><span class='line'>      <span class="n">misawa</span><span class="o">.</span><span class="n">scrape</span><span class="o">.</span><span class="n">each_with_index</span> <span class="k">do</span> <span class="o">|</span> <span class="n">src</span><span class="p">,</span> <span class="n">i</span> <span class="o">|</span>
</span><span class='line'>        <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">misawa</span><span class="o">.</span><span class="n">category</span><span class="si">}</span><span class="s2">-</span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2"> : </span><span class="si">#{</span><span class="n">src</span><span class="si">}</span><span class="s2"> &quot;</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">method_missing</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>      <span class="k">raise</span> <span class="no">ArgumentError</span><span class="p">;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">get_body</span><span class="p">(</span><span class="n">uri</span><span class="p">)</span>
</span><span class='line'>    <span class="k">begin</span>
</span><span class='line'>      <span class="nb">open</span><span class="p">(</span><span class="no">URI</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="n">uri</span><span class="p">))</span><span class="o">.</span><span class="n">read</span>
</span><span class='line'>    <span class="k">rescue</span> <span class="no">OpenURI</span><span class="o">::</span><span class="no">HTTPError</span>
</span><span class='line'>      <span class="k">return</span> <span class="kp">nil</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">create_uri</span>
</span><span class='line'>    <span class="k">if</span> <span class="vi">@page</span><span class="o">.</span><span class="n">is_a?</span><span class="p">(</span><span class="no">Range</span><span class="p">)</span>
</span><span class='line'>      <span class="n">base</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="no">DOMAIN</span><span class="si">}</span><span class="s2">/?cid=</span><span class="si">#{</span><span class="vi">@category</span><span class="si">}</span><span class="s2">&amp;page=&quot;</span>
</span><span class='line'>      <span class="vi">@page</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span> <span class="n">i</span> <span class="o">|</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">base</span><span class="si">}#{</span><span class="n">i</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="o">[</span><span class="s2">&quot;</span><span class="si">#{</span><span class="no">DOMAIN</span><span class="si">}</span><span class="s2">/?cid=</span><span class="si">#{</span><span class="vi">@category</span><span class="si">}</span><span class="s2">&amp;page=</span><span class="si">#{</span><span class="vi">@page</span><span class="si">}</span><span class="s2">&quot;</span><span class="o">]</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="vg">$0</span> <span class="o">===</span> <span class="bp">__FILE__</span>
</span><span class='line'>
</span><span class='line'>  <span class="no">OptionParser</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span> <span class="o">|</span> <span class="n">opt</span> <span class="o">|</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">arguments</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">opt</span><span class="o">.</span><span class="n">on</span><span class="p">(</span><span class="s1">&#39;-t [TYPE]&#39;</span><span class="p">,</span> <span class="s1">&#39;--type [TYPE]&#39;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span> <span class="n">value</span> <span class="o">|</span>
</span><span class='line'>      <span class="n">arguments</span><span class="o">[</span><span class="ss">:type</span><span class="o">]</span> <span class="o">=</span> <span class="n">value</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">opt</span><span class="o">.</span><span class="n">on</span><span class="p">(</span><span class="s1">&#39;-p [PAGE]&#39;</span><span class="p">,</span> <span class="s1">&#39;--page [PAGE]&#39;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span> <span class="n">value</span> <span class="o">|</span>
</span><span class='line'>      <span class="n">arguments</span><span class="o">[</span><span class="ss">:page</span><span class="o">]</span> <span class="o">=</span> <span class="n">value</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">opt</span><span class="o">.</span><span class="n">on</span><span class="p">(</span><span class="s1">&#39;-c [CATEGORY]&#39;</span><span class="p">,</span> <span class="s1">&#39;--category [CATEGORY]&#39;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span> <span class="n">value</span> <span class="o">|</span>
</span><span class='line'>      <span class="n">arguments</span><span class="o">[</span><span class="ss">:category</span><span class="o">]</span> <span class="o">=</span> <span class="n">value</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">opt</span><span class="o">.</span><span class="n">parse!</span><span class="p">(</span><span class="no">ARGV</span><span class="p">)</span>
</span><span class='line'>    <span class="no">Misawa</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">arguments</span><span class="o">[</span><span class="ss">:type</span><span class="o">]</span> <span class="o">||</span> <span class="s1">&#39;uri&#39;</span><span class="si">}</span><span class="s2">_misawa&quot;</span><span class="p">,</span> <span class="n">arguments</span><span class="o">[</span><span class="ss">:category</span><span class="o">]</span><span class="p">,</span> <span class="n">arguments</span><span class="o">[</span><span class="ss">:page</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<h2>使い方</h2>


<p>インストールは以下の通り。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>gem install Ruby4Misawa
</span></code></pre></td></tr></table></div></figure>


<p>以下は実行例。
ちなみにこれは、バイトリーダーの０～３ページまでに表示される画像を保存します。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>ruby Ruby4Misawa.rb -t save -c バイトリーダー -p 0..3
</span></code></pre></td></tr></table></div></figure>




<h5>簡単な解説(といってもREADMEの内容)</h5>


<dl>
<dt>-t [uri, save]
<dd>uriは画像のURIを出力、saveは保存しまくる。permission関係でこける可能性はありけり。
<dt>-c [カテゴリ名]
<dd>ルシフェル やバイトリーダーのように指定。一つしか指定できないので注意。
<dt>-p [対象ページ]
<dd>1 や 0のような数値か、0..5のようにRange形式で指定
<dd>&#8211;type, &#8211;category, &#8211;pageでも可
<dd>ちなみに何も指定しないと地獄のミサワのトップページにあるミサワ画像(と思われるもの)を取ってくる
</dl>


<p>良いミサワライフを！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScriptで記号プログラミング AND console.logで出力]]></title>
    <link href="http://namusyaka.github.com/blog/2012/02/19/github-jekyll/"/>
    <updated>2012-02-19T00:00:00+09:00</updated>
    <id>http://namusyaka.github.com/blog/2012/02/19/github-jekyll</id>
    <content type="html"><![CDATA[<p>謎解きみたいで面白かった
&#8217;.&#8217;をどうやって取るかで一瞬迷ったのと、一度どこまでやったか忘れると死ぬので疲れた
もっと短く出来るとはおもうけど公開
Firefoxでしか動作確認しておりません</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">[][(({}</span><span class="o">+</span><span class="p">{})[(([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})])</span><span class="o">+</span><span class="p">(({}</span><span class="o">+</span><span class="p">{})[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span>
</span><span class='line'><span class="p">((([][{}</span><span class="o">&lt;&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&gt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[(([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">([]</span>
</span><span class='line'><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">((([][{}</span><span class="o">&lt;&lt;</span><span class="p">{}])</span><span class="o">+</span>
</span><span class='line'><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]])</span><span class="o">+</span><span class="p">(({}</span><span class="o">+</span><span class="p">{})[(([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span>
</span><span class='line'><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]])</span><span class="o">+</span><span class="p">(({}</span><span class="o">+</span><span class="p">{})[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])][(({}</span><span class="o">+</span><span class="p">{})[(</span>
</span><span class='line'><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})])</span><span class="o">+</span><span class="p">(({}</span><span class="o">+</span><span class="p">{})[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">((([][{}</span><span class="o">&lt;&lt;</span><span class="p">{}]</span>
</span><span class='line'><span class="p">)</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&gt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[(([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})])</span><span class="o">+</span><span class="p">(((</span>
</span><span class='line'><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">((([][{}</span><span class="o">&lt;&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[</span>
</span><span class='line'><span class="p">]])</span><span class="o">+</span><span class="p">(({}</span><span class="o">+</span><span class="p">{})[(([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[</span>
</span><span class='line'><span class="p">[]</span><span class="o">^</span><span class="p">[]])</span><span class="o">+</span><span class="p">(({}</span><span class="o">+</span><span class="p">{})[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])](((({}</span><span class="o">+</span><span class="p">{})[(([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span>
</span><span class='line'><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})])</span><span class="o">+</span><span class="p">(({}</span><span class="o">+</span><span class="p">{})[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">((([][{}</span><span class="o">&lt;&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[</span>
</span><span class='line'><span class="p">]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&gt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[(([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})])</span><span class="o">+</span><span class="p">(({}</span><span class="o">+</span><span class="p">{})[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span>
</span><span class='line'><span class="p">{}])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&gt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[(([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([</span>
</span><span class='line'><span class="p">]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})])</span><span class="o">+</span><span class="p">(((([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">/</span><span class="p">(([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{</span>
</span><span class='line'><span class="p">})</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&gt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})])</span><span class="o">+</span><span class="p">(</span>
</span><span class='line'><span class="p">({}</span><span class="o">+</span><span class="p">{})[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">(((({}</span><span class="o">+</span><span class="p">{})[(([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})])</span><span class="o">+</span><span class="p">((</span>
</span><span class='line'><span class="p">{}</span><span class="o">+</span><span class="p">{})[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">((([][{}</span><span class="o">&lt;&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&gt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[(([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}</span>
</span><span class='line'><span class="p">)</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}</span>
</span><span class='line'><span class="p">])</span><span class="o">+</span><span class="p">((([][{}</span><span class="o">&lt;&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]])</span><span class="o">+</span><span class="p">(({}</span><span class="o">+</span><span class="p">{})[(([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">(</span>
</span><span class='line'><span class="p">[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]])</span><span class="o">+</span><span class="p">(({}</span><span class="o">+</span><span class="p">{})[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[</span>
</span><span class='line'><span class="p">]</span><span class="o">&lt;</span><span class="p">{}])[(({}</span><span class="o">+</span><span class="p">{})[(([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})])</span><span class="o">+</span><span class="p">(({}</span><span class="o">+</span><span class="p">{})[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{</span>
</span><span class='line'><span class="p">}])</span><span class="o">+</span><span class="p">((([][{}</span><span class="o">&lt;&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&gt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[(([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span>
</span><span class='line'><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">((([][{}</span><span class="o">&lt;&lt;</span><span class="p">{</span>
</span><span class='line'><span class="p">}])</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]])</span><span class="o">+</span><span class="p">(({}</span><span class="o">+</span><span class="p">{})[(([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})])</span><span class="o">+</span><span class="p">((</span>
</span><span class='line'><span class="p">([]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]])</span><span class="o">+</span><span class="p">(({}</span><span class="o">+</span><span class="p">{})[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])]</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}</span>
</span><span class='line'><span class="p">))[((([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">((([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span>
</span><span class='line'><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">-</span><span class="p">((([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span>
</span><span class='line'><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))])</span><span class="o">+</span><span class="p">((({}</span><span class="o">+</span><span class="p">{})[(([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})])</span><span class="o">+</span><span class="p">(({}</span><span class="o">+</span><span class="p">{}</span>
</span><span class='line'><span class="p">)[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">((([][{}</span><span class="o">&lt;&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&gt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[(([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([</span>
</span><span class='line'><span class="p">]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">((</span>
</span><span class='line'><span class="p">([][{}</span><span class="o">&lt;&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]])</span><span class="o">+</span><span class="p">(({}</span><span class="o">+</span><span class="p">{})[(([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span>
</span><span class='line'><span class="o">&lt;</span><span class="p">{})])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]])</span><span class="o">+</span><span class="p">(({}</span><span class="o">+</span><span class="p">{})[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}]</span>
</span><span class='line'><span class="p">)[(({}</span><span class="o">+</span><span class="p">{})[(([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})])</span><span class="o">+</span><span class="p">(({}</span><span class="o">+</span><span class="p">{})[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">(</span>
</span><span class='line'><span class="p">(([][{}</span><span class="o">&lt;&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&gt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[(([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span>
</span><span class='line'><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">((([][{}</span><span class="o">&lt;&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">(</span>
</span><span class='line'><span class="p">{}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]])</span><span class="o">+</span><span class="p">(({}</span><span class="o">+</span><span class="p">{})[(([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span><span class="p">{</span>
</span><span class='line'><span class="p">})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]])</span><span class="o">+</span><span class="p">(({}</span><span class="o">+</span><span class="p">{})[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])]</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[((</span>
</span><span class='line'><span class="p">[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">*</span><span class="p">((([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}</span>
</span><span class='line'><span class="p">))</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})]</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">((({}</span><span class="o">+</span><span class="p">{})[(([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}</span>
</span><span class='line'><span class="p">)])</span><span class="o">+</span><span class="p">(({}</span><span class="o">+</span><span class="p">{})[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">((([][{}</span><span class="o">&lt;&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&gt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[(([]</span>
</span><span class='line'><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span>
</span><span class='line'><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">((([][{}</span><span class="o">&lt;&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]])</span><span class="o">+</span><span class="p">(({}</span><span class="o">+</span><span class="p">{})[(([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span>
</span><span class='line'><span class="p">{}))</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]])</span><span class="o">+</span><span class="p">(({}</span><span class="o">+</span><span class="p">{})[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{})</span>
</span><span class='line'><span class="p">)[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])[(({}</span><span class="o">+</span><span class="p">{})[(([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})])</span><span class="o">+</span><span class="p">(({}</span><span class="o">+</span><span class="p">{})[[</span>
</span><span class='line'><span class="p">]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">((([][{}</span><span class="o">&lt;&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&gt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[(([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[</span>
</span><span class='line'><span class="p">]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">((([]</span>
</span><span class='line'><span class="p">[{}</span><span class="o">&lt;&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]])</span><span class="o">+</span><span class="p">(({}</span><span class="o">+</span><span class="p">{})[(([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}</span>
</span><span class='line'><span class="p">)])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]])</span><span class="o">+</span><span class="p">(({}</span><span class="o">+</span><span class="p">{})[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])</span><span class="o">+</span><span class="p">((([]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">({}</span><span class="o">+</span><span class="p">{}))[[]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}])]</span><span class="o">+</span>
</span><span class='line'><span class="p">({}</span><span class="o">+</span><span class="p">{}))[(([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">*</span><span class="p">((([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">&lt;&lt;</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span>
</span><span class='line'><span class="p">)</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{}))</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})</span><span class="o">+</span><span class="p">([]</span><span class="o">^</span><span class="p">[]</span><span class="o">&lt;</span><span class="p">{})]))()</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[キーワード解析に重点をおいたTwitterプロフィールサービス「Twihomeβ」をリリースしました。]]></title>
    <link href="http://namusyaka.github.com/blog/2012/02/17/github-jekyll/"/>
    <updated>2012-02-17T00:00:00+09:00</updated>
    <id>http://namusyaka.github.com/blog/2012/02/17/github-jekyll</id>
    <content type="html"><![CDATA[<p><a href="http://twihome.jp/">TwihomeURL</a></p>


<p>大昔に作ったtwihome.jpn.orgのリメイクを作ろうぜということで<a href="http://luilak.net">Luilak</a>で開発しました。
確か去年の年末くらいから開発し始めましたが、色々あって公開にやたらと時間がかかった挙げ句、機能も相当縮小してリリースすることになってしまったのが残念です。
ただ、プロフィールサービスも色々ある中、気になるキーワードをよく使うユーザーを検索してつながりを拡げられる(かもしれない)っていうのは新しいんじゃないかと思うわけで、短期間で修正しまくった割にはそこそこ満足しています。
そのうちGithubで全ソース公開するかもしれません。
以下、簡単な説明</p>

<dl>
<dt>機能
<dd>最近のキーワードを解析してそれに関する情報の表示
<dd>同じキーワードを持つユーザーの検索
<dd>スマホ対応
<dd>各ユーザーのPV表示

<dt>運用環境
<dd>さくらのVPS512

<dt>感想
<dd>デザイン、フロントエンド、バックエンドと担当しましたが、未だに色々発見があって楽しいです。
<dd>このサービスでテンプレートエンジンを初めて使ってみて、便利だなあと感動できたことが一番の収穫ですかね。

</dl>

]]></content>
  </entry>
  
</feed>
